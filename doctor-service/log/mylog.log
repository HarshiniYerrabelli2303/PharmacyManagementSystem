<<<<<<< HEAD
[2022-07-27T10:23:34.034Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-27T10:23:34.034Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018531 with PID 4740 (C:\Users\MEGHGR\Downloads\doctor-service\target\classes started by meghgr in C:\Users\MEGHGR\Downloads\doctor-service)
[2022-07-27T10:23:34.034Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-27T10:23:35.035Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-27T10:23:35.035Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 112 ms. Found 1 JPA repository interfaces.
[2022-07-27T10:23:35.035Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=bf152a8f-d543-32ae-8bd8-ae0ffc422c61
[2022-07-27T10:23:35.035Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-27T10:23:35.035Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-27T10:23:35.035Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-27T10:23:35.035Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-27T10:23:35.035Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-27T10:23:35.035Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1307 ms
[2022-07-27T10:23:35.035Z] [org.springframework.context.support.AbstractApplicationContext] [main] [591] [WARN ] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
[2022-07-27T10:23:35.035Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Stopping service [Tomcat]
[2022-07-27T10:23:35.035Z] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [main] [136] [INFO ] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2022-07-27T10:23:36.036Z] [org.springframework.boot.SpringApplication] [main] [824] [ERROR] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:10)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 35 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:171)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.initializeDataSourceBuilder(DataSourceProperties.java:123)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:90)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 36 common frames omitted
[2022-07-27T10:24:33.033Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-27T10:24:33.033Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018531 with PID 14288 (C:\Users\MEGHGR\Downloads\doctor-service\target\classes started by meghgr in C:\Users\MEGHGR\Downloads\doctor-service)
[2022-07-27T10:24:33.033Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-27T10:24:33.033Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-27T10:24:34.034Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 126 ms. Found 1 JPA repository interfaces.
[2022-07-27T10:24:34.034Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=bf152a8f-d543-32ae-8bd8-ae0ffc422c61
[2022-07-27T10:24:34.034Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-27T10:24:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-27T10:24:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-27T10:24:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-27T10:24:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-27T10:24:34.034Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1334 ms
[2022-07-27T10:24:34.034Z] [org.springframework.context.support.AbstractApplicationContext] [main] [591] [WARN ] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
[2022-07-27T10:24:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Stopping service [Tomcat]
[2022-07-27T10:24:34.034Z] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [main] [136] [INFO ] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2022-07-27T10:24:34.034Z] [org.springframework.boot.SpringApplication] [main] [824] [ERROR] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:10)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 35 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:171)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.initializeDataSourceBuilder(DataSourceProperties.java:123)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:90)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 36 common frames omitted
[2022-07-27T10:27:25.025Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-27T10:27:25.025Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018531 with PID 9160 (C:\Users\MEGHGR\Downloads\doctor-service\target\classes started by meghgr in C:\Users\MEGHGR\Downloads\doctor-service)
[2022-07-27T10:27:25.025Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-27T10:27:25.025Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-27T10:27:26.026Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 139 ms. Found 1 JPA repository interfaces.
[2022-07-27T10:27:26.026Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=bf152a8f-d543-32ae-8bd8-ae0ffc422c61
[2022-07-27T10:27:26.026Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-27T10:27:26.026Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-27T10:27:26.026Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-27T10:27:26.026Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-27T10:27:26.026Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-27T10:27:26.026Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1344 ms
[2022-07-27T10:27:26.026Z] [org.springframework.context.support.AbstractApplicationContext] [main] [591] [WARN ] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
[2022-07-27T10:27:26.026Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Stopping service [Tomcat]
[2022-07-27T10:27:26.026Z] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [main] [136] [INFO ] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2022-07-27T10:27:26.026Z] [org.springframework.boot.SpringApplication] [main] [824] [ERROR] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:12)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:658)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 21 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 35 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot load driver class: org.postgresql.Driver
	at org.springframework.util.Assert.state(Assert.java:97)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.determineDriverClassName(DataSourceProperties.java:171)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceProperties.initializeDataSourceBuilder(DataSourceProperties.java:123)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:48)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:90)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 36 common frames omitted
[2022-07-27T10:30:24.024Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-27T10:30:24.024Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018531 with PID 12752 (C:\Users\MEGHGR\Downloads\doctor-service\target\classes started by meghgr in C:\Users\MEGHGR\Downloads\doctor-service)
[2022-07-27T10:30:24.024Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-27T10:30:24.024Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-27T10:30:25.025Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 129 ms. Found 1 JPA repository interfaces.
[2022-07-27T10:30:25.025Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=bf152a8f-d543-32ae-8bd8-ae0ffc422c61
[2022-07-27T10:30:25.025Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-27T10:30:25.025Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-27T10:30:25.025Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-27T10:30:25.025Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-27T10:30:25.025Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-27T10:30:25.025Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1385 ms
[2022-07-27T10:30:25.025Z] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-27T10:30:26.026Z] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-27T10:30:26.026Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-27T10:30:26.026Z] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-27T10:30:26.026Z] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-27T10:30:26.026Z] [org.hibernate.dialect.Dialect] [main] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-27T10:30:27.027Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-27T10:30:27.027Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-27T10:30:27.027Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-27T10:30:28.028Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [main] [68] [INFO ] Eureka HTTP Client uses RestTemplate.
[2022-07-27T10:30:28.028Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [main] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-27T10:30:28.028Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [1007] [INFO ] Disable delta property : false
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [1009] [INFO ] Force full registry fetch : false
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [1010] [INFO ] Application is null : false
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [1013] [INFO ] Application version is -1: true
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [1106] [INFO ] The response status is 200
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [main] [492] [INFO ] Discovery Client initialized at timestamp 1658898028721 with initial instances count: 2
[2022-07-27T10:30:28.028Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658898028724, current=UP, previous=STARTING]
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018531.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-27T10:30:28.028Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-27T10:30:28.028Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-27T10:30:28.028Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [144] [INFO ] Updating port to 8081
[2022-07-27T10:30:28.028Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018531.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-27T10:30:28.028Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started DoctorServiceApplication in 4.932 seconds (JVM running for 5.782)
[2022-07-27T10:35:28.028Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-27T10:37:38.038Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-2] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-27T10:37:38.038Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8081-exec-2] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-27T10:37:38.038Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8081-exec-2] [547] [INFO ] Completed initialization in 1 ms
[2022-07-27T10:37:59.059Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-3] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.Doctor] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=dateOfBirth, rootBeanClass=class com.doctorservice.entity.Doctor, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=phone, rootBeanClass=class com.doctorservice.entity.Doctor, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityInsertAction.preInsert(EntityInsertAction.java:214)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:100)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3290)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2425)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy119.save(Unknown Source)
	at com.doctorservice.serviceimpl.DoctorServiceImpl.doctorRegistration(DoctorServiceImpl.java:36)
	at com.doctorservice.controller.DoctorController.registerDoctor(DoctorController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-27T10:39:08.008Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-5] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.Doctor] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=dateOfBirth, rootBeanClass=class com.doctorservice.entity.Doctor, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityInsertAction.preInsert(EntityInsertAction.java:214)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:100)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3290)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2425)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy119.save(Unknown Source)
	at com.doctorservice.serviceimpl.DoctorServiceImpl.doctorRegistration(DoctorServiceImpl.java:36)
	at com.doctorservice.controller.DoctorController.registerDoctor(DoctorController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-27T10:40:28.028Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-27T10:40:36.036Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-7] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.Doctor] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=dateOfBirth, rootBeanClass=class com.doctorservice.entity.Doctor, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityInsertAction.preInsert(EntityInsertAction.java:214)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:100)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3290)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2425)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy119.save(Unknown Source)
	at com.doctorservice.serviceimpl.DoctorServiceImpl.doctorRegistration(DoctorServiceImpl.java:36)
	at com.doctorservice.controller.DoctorController.registerDoctor(DoctorController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-27T10:41:18.018Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-9] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Error while committing the transaction] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.Doctor] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=dateOfBirth, rootBeanClass=class com.doctorservice.entity.Doctor, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityInsertAction.preInsert(EntityInsertAction.java:214)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:100)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3290)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2425)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy119.save(Unknown Source)
	at com.doctorservice.serviceimpl.DoctorServiceImpl.doctorRegistration(DoctorServiceImpl.java:36)
	at com.doctorservice.controller.DoctorController.registerDoctor(DoctorController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-27T10:41:48.048Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(15)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2022-07-27T10:41:48.048Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(15)-127.0.0.1] [62] [INFO ] Unregistering application DOCTOR-SERVICE with eureka with status DOWN
[2022-07-27T10:41:48.048Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(15)-127.0.0.1] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658898708614, current=DOWN, previous=UP]
[2022-07-27T10:41:48.048Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018531.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-27T10:41:48.048Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018531.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-27T10:41:48.048Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [RMI TCP Connection(15)-127.0.0.1] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-27T10:41:48.048Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(15)-127.0.0.1] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-27T10:41:48.048Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(15)-127.0.0.1] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-27T10:41:48.048Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(15)-127.0.0.1] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-27T10:41:51.051Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(15)-127.0.0.1] [971] [INFO ] Unregistering ...
[2022-07-27T10:41:51.051Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(15)-127.0.0.1] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018531.corp.capgemini.com:doctor-service:8081 - deregister  status: 200
[2022-07-27T10:41:51.051Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(15)-127.0.0.1] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-27T10:42:32.032Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-27T10:42:32.032Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018531 with PID 6524 (C:\Users\MEGHGR\Downloads\doctor-service\target\classes started by meghgr in C:\Users\MEGHGR\Downloads\doctor-service)
[2022-07-27T10:42:32.032Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-27T10:42:33.033Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-27T10:42:33.033Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 231 ms. Found 1 JPA repository interfaces.
[2022-07-27T10:42:33.033Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=bf152a8f-d543-32ae-8bd8-ae0ffc422c61
[2022-07-27T10:42:34.034Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-27T10:42:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-27T10:42:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-27T10:42:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-27T10:42:34.034Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-27T10:42:34.034Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 2390 ms
[2022-07-27T10:42:35.035Z] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-27T10:42:35.035Z] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-27T10:42:35.035Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-27T10:42:35.035Z] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-27T10:42:36.036Z] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-27T10:42:36.036Z] [org.hibernate.dialect.Dialect] [main] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-27T10:42:37.037Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-27T10:42:37.037Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-27T10:42:37.037Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-27T10:42:38.038Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [main] [68] [INFO ] Eureka HTTP Client uses RestTemplate.
[2022-07-27T10:42:39.039Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [main] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-27T10:42:39.039Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1007] [INFO ] Disable delta property : false
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1009] [INFO ] Force full registry fetch : false
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1010] [INFO ] Application is null : false
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1013] [INFO ] Application version is -1: true
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1106] [INFO ] The response status is 200
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [main] [492] [INFO ] Discovery Client initialized at timestamp 1658898759891 with initial instances count: 2
[2022-07-27T10:42:39.039Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658898759896, current=UP, previous=STARTING]
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018531.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-27T10:42:39.039Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-27T10:42:39.039Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-27T10:42:39.039Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [144] [INFO ] Updating port to 8081
[2022-07-27T10:42:39.039Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018531.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-27T10:42:40.040Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started DoctorServiceApplication in 8.723 seconds (JVM running for 10.21)
[2022-07-27T10:42:45.045Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-27T10:42:45.045Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8081-exec-1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-27T10:42:45.045Z] [org.springframework.web.servlet.FrameworkServlet] [http-nio-8081-exec-1] [547] [INFO ] Completed initialization in 2 ms
[2022-07-27T10:47:39.039Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
=======
[2022-07-26T21:50:14.014Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-26T21:50:14.014Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 22684 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T21:50:14.014Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T21:50:15.015Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T21:50:15.015Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 121 ms. Found 1 JPA repository interfaces.
[2022-07-26T21:50:15.015Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=026bd9de-5c30-342e-bfff-10e69499d50b
[2022-07-26T21:50:15.015Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T21:50:15.015Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T21:50:15.015Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T21:50:15.015Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T21:50:15.015Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T21:50:15.015Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1509 ms
[2022-07-26T21:50:16.016Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [main] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T21:50:16.016Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T21:50:16.016Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T21:50:16.016Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T21:50:16.016Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T21:50:16.016Z] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T21:50:16.016Z] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-26T21:50:16.016Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-26T21:50:16.016Z] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-26T21:50:17.017Z] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-26T21:50:17.017Z] [org.hibernate.dialect.Dialect] [main] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T21:50:17.017Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T21:50:17.017Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T21:50:17.017Z] [org.springframework.context.support.AbstractApplicationContext] [main] [591] [WARN ] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'doctorController': Unsatisfied dependency expressed through field 'doctorservice'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'doctorServiceImpl': Unsatisfied dependency expressed through field 'convert'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.doctorservice.util.ConversionClass' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
[2022-07-26T21:50:17.017Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T21:50:17.017Z] [com.zaxxer.hikari.HikariDataSource] [main] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-26T21:50:17.017Z] [com.zaxxer.hikari.HikariDataSource] [main] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-26T21:50:17.017Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Stopping service [Tomcat]
[2022-07-26T21:50:17.017Z] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [main] [136] [INFO ] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2022-07-26T21:50:17.017Z] [org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter] [main] [40] [ERROR] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field convert in com.doctorservice.service.DoctorServiceImpl required a bean of type 'com.doctorservice.util.ConversionClass' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.doctorservice.util.ConversionClass' in your configuration.

[2022-07-26T21:51:25.025Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-26T21:51:25.025Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 20084 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T21:51:25.025Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T21:51:26.026Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T21:51:26.026Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 117 ms. Found 1 JPA repository interfaces.
[2022-07-26T21:51:26.026Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=3b9ae6e8-abb8-3a70-8480-4aa35b024e0c
[2022-07-26T21:51:27.027Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T21:51:27.027Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T21:51:27.027Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T21:51:27.027Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T21:51:27.027Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T21:51:27.027Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1454 ms
[2022-07-26T21:51:27.027Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [main] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T21:51:27.027Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T21:51:27.027Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T21:51:27.027Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T21:51:27.027Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T21:51:28.028Z] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T21:51:28.028Z] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-26T21:51:28.028Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-26T21:51:28.028Z] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-26T21:51:28.028Z] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-26T21:51:28.028Z] [org.hibernate.dialect.Dialect] [main] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T21:51:29.029Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T21:51:29.029Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T21:51:29.029Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T21:51:30.030Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [main] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T21:51:30.030Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [main] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T21:51:30.030Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1007] [INFO ] Disable delta property : false
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1010] [INFO ] Application is null : false
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1013] [INFO ] Application version is -1: true
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] [main] [84] [INFO ] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:167)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:195)
	at jdk.proxy2/jdk.proxy2.$Proxy100.getApplications(Unknown Source)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration.peerAwareInstanceRegistry(EurekaServerAutoConfiguration.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:12)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 101 more

[2022-07-26T21:51:30.030Z] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] [main] [130] [WARN ] Request execution failed with message: java.net.ConnectException: Connection refused: no further information
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1021] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1101)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1014)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:441)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:283)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:279)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:66)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:295)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:195)
	at jdk.proxy2/jdk.proxy2.$Proxy100.getApplications(Unknown Source)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration.peerAwareInstanceRegistry(EurekaServerAutoConfiguration.java:150)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:12)

[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [443] [INFO ] Initial registry fetch from primary servers failed
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient$1] [main] [304] [WARN ] Using default backup registry implementation which does not do anything.
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [448] [INFO ] Initial registry fetch from backup servers failed
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [492] [INFO ] Discovery Client initialized at timestamp 1658852490604 with initial instances count: 0
[2022-07-26T21:51:30.030Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [66] [INFO ] Initializing ...
[2022-07-26T21:51:30.030Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T21:51:30.030Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [109] [INFO ] Replica node URL:  http://localhost:8761/eureka/
[2022-07-26T21:51:30.030Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [main] [153] [INFO ] Finished initializing remote region registries. All known remote regions: []
[2022-07-26T21:51:30.030Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [73] [INFO ] Initialized
[2022-07-26T21:51:30.030Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 1 endpoint(s) beneath base path '/actuator'
[2022-07-26T21:51:30.030Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658852490847, current=UP, previous=STARTING]
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T21:51:30.030Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] [DiscoveryClient-InstanceInfoReplicator-0] [84] [INFO ] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more

[2022-07-26T21:51:30.030Z] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] [DiscoveryClient-InstanceInfoReplicator-0] [130] [WARN ] Request execution failed with message: java.net.ConnectException: Connection refused: no further information
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [878] [WARN ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T21:51:30.030Z] [com.netflix.discovery.InstanceInfoReplicator] [DiscoveryClient-InstanceInfoReplicator-0] [125] [WARN ] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T21:51:30.030Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [143] [INFO ] isAws returned false
[2022-07-26T21:51:30.030Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [109] [INFO ] Initialized server context
[2022-07-26T21:51:30.030Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-26T21:51:30.030Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [144] [INFO ] Updating port to 8081
[2022-07-26T21:51:30.030Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started DoctorServiceApplication in 5.487 seconds (JVM running for 6.335)
[2022-07-26T21:51:31.031Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-26T21:51:31.031Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-26T21:51:31.031Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [547] [INFO ] Completed initialization in 1 ms
[2022-07-26T21:51:48.048Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(2)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2022-07-26T21:51:48.048Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(2)-127.0.0.1] [62] [INFO ] Unregistering application DOCTOR-SERVICE with eureka with status DOWN
[2022-07-26T21:51:48.048Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(2)-127.0.0.1] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658852508329, current=DOWN, previous=UP]
[2022-07-26T21:51:48.048Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T21:51:48.048Z] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] [DiscoveryClient-InstanceInfoReplicator-0] [84] [INFO ] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more

[2022-07-26T21:51:48.048Z] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] [DiscoveryClient-InstanceInfoReplicator-0] [130] [WARN ] Request execution failed with message: java.net.ConnectException: Connection refused: no further information
[2022-07-26T21:51:48.048Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [878] [WARN ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T21:51:48.048Z] [com.netflix.discovery.InstanceInfoReplicator] [DiscoveryClient-InstanceInfoReplicator-0] [125] [WARN ] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T21:51:48.048Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(2)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T21:51:48.048Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(2)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T21:51:48.048Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [RMI TCP Connection(2)-127.0.0.1] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T21:51:48.048Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(2)-127.0.0.1] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-26T21:51:48.048Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(2)-127.0.0.1] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-26T21:51:48.048Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(2)-127.0.0.1] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T21:51:51.051Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(2)-127.0.0.1] [971] [INFO ] Unregistering ...
[2022-07-26T21:51:51.051Z] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] [RMI TCP Connection(2)-127.0.0.1] [84] [INFO ] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 84 more

[2022-07-26T21:51:51.051Z] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] [RMI TCP Connection(2)-127.0.0.1] [130] [WARN ] Request execution failed with message: java.net.ConnectException: Connection refused: no further information
[2022-07-26T21:51:51.051Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(2)-127.0.0.1] [975] [ERROR] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T21:51:51.051Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(2)-127.0.0.1] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T21:52:00.000Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [76] [ERROR] Cannot bootstrap eureka server :
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Initialization of bean failed; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'tlsProperties': Could not bind properties to 'TlsProperties' : prefix=eureka.client.tls, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@379ab47b has been closed already
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:195)
	at jdk.proxy2/jdk.proxy2.$Proxy100.getApplications(Unknown Source)
	at com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.syncUp(PeerAwareInstanceRegistryImpl.java:222)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:112)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.contextInitialized(EurekaServerBootstrap.java:71)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.lambda$start$0(EurekaServerInitializerConfiguration.java:68)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'tlsProperties': Could not bind properties to 'TlsProperties' : prefix=eureka.client.tls, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@379ab47b has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:92)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:78)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments(ConstructorResolver.java:834)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:449)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$ShortcutDependencyDescriptor.resolveShortcut(AutowiredAnnotationBeanPostProcessor.java:818)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1323)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.resolvedCachedArgument(AutowiredAnnotationBeanPostProcessor.java:600)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.access$000(AutowiredAnnotationBeanPostProcessor.java:131)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:631)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	... 23 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@379ab47b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1138)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1159)
	at org.springframework.boot.context.properties.BoundConfigurationProperties.get(BoundConfigurationProperties.java:78)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getHandler(ConfigurationPropertiesBinder.java:133)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:114)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:94)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:89)
	... 56 common frames omitted
[2022-07-26T21:52:00.000Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] [Thread-9] [77] [ERROR] Could not initialize Eureka servlet context
java.lang.RuntimeException: Cannot bootstrap eureka server :
	at org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.contextInitialized(EurekaServerBootstrap.java:77)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.lambda$start$0(EurekaServerInitializerConfiguration.java:68)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration': Initialization of bean failed; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'tlsProperties': Could not bind properties to 'TlsProperties' : prefix=eureka.client.tls, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@379ab47b has been closed already
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:374)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:376)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:371)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:195)
	at jdk.proxy2/jdk.proxy2.$Proxy100.getApplications(Unknown Source)
	at com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.syncUp(PeerAwareInstanceRegistryImpl.java:222)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:112)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.contextInitialized(EurekaServerBootstrap.java:71)
	... 2 common frames omitted
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'tlsProperties': Could not bind properties to 'TlsProperties' : prefix=eureka.client.tls, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@379ab47b has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:92)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:78)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments(ConstructorResolver.java:834)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:449)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$ShortcutDependencyDescriptor.resolveShortcut(AutowiredAnnotationBeanPostProcessor.java:818)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1323)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.resolvedCachedArgument(AutowiredAnnotationBeanPostProcessor.java:600)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.access$000(AutowiredAnnotationBeanPostProcessor.java:131)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:631)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	... 23 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@379ab47b has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1138)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1159)
	at org.springframework.boot.context.properties.BoundConfigurationProperties.get(BoundConfigurationProperties.java:78)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getHandler(ConfigurationPropertiesBinder.java:133)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:114)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:94)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:89)
	... 56 common frames omitted
[2022-07-26T21:52:19.019Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-26T21:52:19.019Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 22024 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T21:52:19.019Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T21:52:20.020Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T21:52:20.020Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 106 ms. Found 1 JPA repository interfaces.
[2022-07-26T21:52:20.020Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=3b9ae6e8-abb8-3a70-8480-4aa35b024e0c
[2022-07-26T21:52:20.020Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T21:52:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T21:52:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T21:52:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T21:52:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T21:52:20.020Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1384 ms
[2022-07-26T21:52:21.021Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [main] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T21:52:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T21:52:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T21:52:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T21:52:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T21:52:21.021Z] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T21:52:21.021Z] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-26T21:52:21.021Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-26T21:52:21.021Z] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-26T21:52:22.022Z] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-26T21:52:22.022Z] [org.hibernate.dialect.Dialect] [main] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T21:52:22.022Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T21:52:22.022Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T21:52:22.022Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T21:52:23.023Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [main] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T21:52:23.023Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [main] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T21:52:23.023Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1007] [INFO ] Disable delta property : false
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1010] [INFO ] Application is null : false
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1013] [INFO ] Application version is -1: true
[2022-07-26T21:52:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.DiscoveryClient] [main] [1106] [INFO ] The response status is 200
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.DiscoveryClient] [main] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.DiscoveryClient] [main] [492] [INFO ] Discovery Client initialized at timestamp 1658852544073 with initial instances count: 0
[2022-07-26T21:52:24.024Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [66] [INFO ] Initializing ...
[2022-07-26T21:52:24.024Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T21:52:24.024Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [109] [INFO ] Replica node URL:  http://localhost:8761/eureka/
[2022-07-26T21:52:24.024Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [main] [153] [INFO ] Finished initializing remote region registries. All known remote regions: []
[2022-07-26T21:52:24.024Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [73] [INFO ] Initialized
[2022-07-26T21:52:24.024Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 1 endpoint(s) beneath base path '/actuator'
[2022-07-26T21:52:24.024Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658852544313, current=UP, previous=STARTING]
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T21:52:24.024Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-26T21:52:24.024Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [143] [INFO ] isAws returned false
[2022-07-26T21:52:24.024Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [109] [INFO ] Initialized server context
[2022-07-26T21:52:24.024Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-26T21:52:24.024Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [144] [INFO ] Updating port to 8081
[2022-07-26T21:52:24.024Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T21:52:24.024Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started DoctorServiceApplication in 5.469 seconds (JVM running for 6.302)
[2022-07-26T21:52:24.024Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(1)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-26T21:52:24.024Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-26T21:52:24.024Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-127.0.0.1] [547] [INFO ] Completed initialization in 1 ms
[2022-07-26T21:52:54.054Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1007] [INFO ] Disable delta property : false
[2022-07-26T21:52:54.054Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T21:52:54.054Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T21:52:54.054Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1010] [INFO ] Application is null : false
[2022-07-26T21:52:54.054Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T21:52:54.054Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1013] [INFO ] Application version is -1: false
[2022-07-26T21:52:54.054Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T21:52:54.054Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1106] [INFO ] The response status is 200
[2022-07-26T21:52:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [Thread-9] [266] [INFO ] Registered instance DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 with status UP (replication=true)
[2022-07-26T21:52:54.054Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [244] [INFO ] Got 1 instances from neighboring DS node
[2022-07-26T21:52:54.054Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [245] [INFO ] Renew threshold is: 1
[2022-07-26T21:52:54.054Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [256] [INFO ] Changing status to UP
[2022-07-26T21:52:54.054Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] [Thread-9] [69] [INFO ] Started Eureka Server
[2022-07-26T21:53:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T21:54:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T21:55:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 11ms
[2022-07-26T21:56:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T21:57:23.023Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T21:57:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 1ms
[2022-07-26T21:58:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 1ms
[2022-07-26T21:59:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:00:48.048Z] [org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler] [http-nio-8081-exec-8] [209] [WARN ] Request method 'GET' not supported
[2022-07-26T22:00:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 1ms
[2022-07-26T22:01:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:01:57.057Z] [com.doctorservice.service.DoctorServiceImpl] [http-nio-8081-exec-10] [45] [ERROR] User Not Found
[2022-07-26T22:02:23.023Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:02:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:03:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 12ms
[2022-07-26T22:04:16.016Z] [com.doctorservice.service.DoctorServiceImpl] [http-nio-8081-exec-4] [45] [ERROR] User Not Found
[2022-07-26T22:04:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 14ms
[2022-07-26T22:05:01.001Z] [org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler] [http-nio-8081-exec-5] [209] [WARN ] Request method 'POST' not supported
[2022-07-26T22:05:13.013Z] [com.doctorservice.service.DoctorServiceImpl] [http-nio-8081-exec-6] [45] [ERROR] User Not Found
[2022-07-26T22:05:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 13ms
[2022-07-26T22:06:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:07:23.023Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:07:24.024Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater] [552] [INFO ] Current renewal threshold is : 1
[2022-07-26T22:07:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 2ms
[2022-07-26T22:08:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:09:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:10:54.054Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:10:54.054Z] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] [DiscoveryClient-CacheRefreshExecutor-0] [93] [INFO ] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more

[2022-07-26T22:10:54.054Z] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] [DiscoveryClient-CacheRefreshExecutor-0] [130] [WARN ] Request execution failed with message: java.net.ConnectException: Connection refused: no further information
[2022-07-26T22:10:54.054Z] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] [DiscoveryClient-HeartbeatExecutor-0] [93] [INFO ] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/} exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:91)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 26 more

[2022-07-26T22:10:54.054Z] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] [DiscoveryClient-HeartbeatExecutor-0] [130] [WARN ] Request execution failed with message: java.net.ConnectException: Connection refused: no further information
[2022-07-26T22:10:54.054Z] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] [DiscoveryClient-CacheRefreshExecutor-0] [84] [INFO ] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:196)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getDelta(AbstractJerseyEurekaHttpClient.java:172)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 more

[2022-07-26T22:10:54.054Z] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] [DiscoveryClient-HeartbeatExecutor-0] [84] [INFO ] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.put(WebResource.java:529)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.sendHeartBeat(AbstractJerseyEurekaHttpClient.java:103)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 27 more

[2022-07-26T22:10:54.054Z] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] [DiscoveryClient-CacheRefreshExecutor-0] [130] [WARN ] Request execution failed with message: java.net.ConnectException: Connection refused: no further information
[2022-07-26T22:10:54.054Z] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] [DiscoveryClient-HeartbeatExecutor-0] [130] [WARN ] Request execution failed with message: java.net.ConnectException: Connection refused: no further information
[2022-07-26T22:10:54.054Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1021] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$7.execute(EurekaHttpClientDecorator.java:152)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getDelta(EurekaHttpClientDecorator.java:149)
	at com.netflix.discovery.DiscoveryClient.getAndUpdateDelta(DiscoveryClient.java:1135)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:1016)
	at com.netflix.discovery.DiscoveryClient.refreshRegistry(DiscoveryClient.java:1531)
	at com.netflix.discovery.DiscoveryClient$CacheRefreshThread.run(DiscoveryClient.java:1498)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

[2022-07-26T22:10:54.054Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-HeartbeatExecutor-0] [907] [ERROR] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - was unable to send heartbeat!
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$3.execute(EurekaHttpClientDecorator.java:92)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.sendHeartBeat(EurekaHttpClientDecorator.java:89)
	at com.netflix.discovery.DiscoveryClient.renew(DiscoveryClient.java:893)
	at com.netflix.discovery.DiscoveryClient$HeartbeatThread.run(DiscoveryClient.java:1457)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:10:56.056Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(23)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2022-07-26T22:10:56.056Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(23)-127.0.0.1] [62] [INFO ] Unregistering application DOCTOR-SERVICE with eureka with status DOWN
[2022-07-26T22:10:56.056Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(23)-127.0.0.1] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658853656143, current=DOWN, previous=UP]
[2022-07-26T22:10:56.056Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:10:56.056Z] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] [DiscoveryClient-InstanceInfoReplicator-0] [84] [INFO ] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:57)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 29 more

[2022-07-26T22:10:56.056Z] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] [DiscoveryClient-InstanceInfoReplicator-0] [130] [WARN ] Request execution failed with message: java.net.ConnectException: Connection refused: no further information
[2022-07-26T22:10:56.056Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [878] [WARN ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:10:56.056Z] [com.netflix.discovery.InstanceInfoReplicator] [DiscoveryClient-InstanceInfoReplicator-0] [125] [WARN ] There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:876)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:10:56.056Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(23)-127.0.0.1] [83] [INFO ] Shutting down Eureka Server..
[2022-07-26T22:10:56.056Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(23)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:10:56.056Z] [com.netflix.servo.monitor.StatsMonitor] [RMI TCP Connection(23)-127.0.0.1] [426] [INFO ] Attempting to get the value for an expired monitor: eurekaServer.replication.batchSize.Will start computing stats again.
[2022-07-26T22:10:56.056Z] [com.netflix.servo.monitor.StatsMonitor] [RMI TCP Connection(23)-127.0.0.1] [426] [INFO ] Attempting to get the value for an expired monitor: eurekaServer.replication.executionTime.Will start computing stats again.
[2022-07-26T22:10:56.056Z] [com.netflix.servo.monitor.StatsMonitor] [RMI TCP Connection(23)-127.0.0.1] [426] [INFO ] Attempting to get the value for an expired monitor: eurekaServer.replication.executionTime.Will start computing stats again.
[2022-07-26T22:10:56.056Z] [com.netflix.servo.monitor.StatsMonitor] [RMI TCP Connection(23)-127.0.0.1] [426] [INFO ] Attempting to get the value for an expired monitor: eurekaServer.replication.batchSize.Will start computing stats again.
[2022-07-26T22:10:56.056Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(23)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:10:56.056Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(23)-127.0.0.1] [93] [INFO ] Eureka Service is now shutdown...
[2022-07-26T22:10:56.056Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(23)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:10:56.056Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(23)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:10:56.056Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [RMI TCP Connection(23)-127.0.0.1] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:10:56.056Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(23)-127.0.0.1] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-26T22:10:56.056Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(23)-127.0.0.1] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-26T22:10:56.056Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(23)-127.0.0.1] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T22:10:59.059Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(23)-127.0.0.1] [971] [INFO ] Unregistering ...
[2022-07-26T22:10:59.059Z] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient] [RMI TCP Connection(23)-127.0.0.1] [84] [INFO ] Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://localhost:8761/eureka/}, exception=java.net.ConnectException: Connection refused: no further information stacktrace=com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: no further information
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor117.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:605)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:440)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 83 more

[2022-07-26T22:10:59.059Z] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient] [RMI TCP Connection(23)-127.0.0.1] [130] [WARN ] Request execution failed with message: java.net.ConnectException: Connection refused: no further information
[2022-07-26T22:10:59.059Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(23)-127.0.0.1] [975] [ERROR] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:197)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:190)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:213)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown(SpringApplicationAdminMXBeanRegistrar.java:160)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:72)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.base/sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:262)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:193)
	at java.management/com.sun.jmx.mbeanserver.ConvertingMethod.invokeWithOpenReturn(ConvertingMethod.java:175)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:117)
	at java.management/com.sun.jmx.mbeanserver.MXBeanIntrospector.invokeM2(MXBeanIntrospector.java:54)
	at java.management/com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:237)
	at java.management/com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:138)
	at java.management/com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:252)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:814)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:802)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1472)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1310)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1405)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:829)
	at java.base/jdk.internal.reflect.GeneratedMethodAccessor117.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:10:59.059Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(23)-127.0.0.1] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T22:11:27.027Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-26T22:11:27.027Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 18536 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T22:11:27.027Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T22:11:27.027Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T22:11:28.028Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 114 ms. Found 1 JPA repository interfaces.
[2022-07-26T22:11:28.028Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=3b9ae6e8-abb8-3a70-8480-4aa35b024e0c
[2022-07-26T22:11:28.028Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T22:11:28.028Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:11:28.028Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T22:11:28.028Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T22:11:28.028Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T22:11:28.028Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1440 ms
[2022-07-26T22:11:28.028Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [main] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T22:11:29.029Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:11:29.029Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:11:29.029Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:11:29.029Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:11:29.029Z] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T22:11:29.029Z] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-26T22:11:29.029Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-26T22:11:29.029Z] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-26T22:11:29.029Z] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-26T22:11:29.029Z] [org.hibernate.dialect.Dialect] [main] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T22:11:30.030Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T22:11:30.030Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:11:30.030Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T22:11:31.031Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [main] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T22:11:31.031Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [main] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T22:11:31.031Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [1007] [INFO ] Disable delta property : false
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [1010] [INFO ] Application is null : false
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [1013] [INFO ] Application version is -1: true
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [1106] [INFO ] The response status is 200
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.DiscoveryClient] [main] [492] [INFO ] Discovery Client initialized at timestamp 1658853691944 with initial instances count: 0
[2022-07-26T22:11:31.031Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [66] [INFO ] Initializing ...
[2022-07-26T22:11:31.031Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:11:31.031Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:11:32.032Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [109] [INFO ] Replica node URL:  http://localhost:8761/eureka/
[2022-07-26T22:11:32.032Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [main] [153] [INFO ] Finished initializing remote region registries. All known remote regions: []
[2022-07-26T22:11:32.032Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [73] [INFO ] Initialized
[2022-07-26T22:11:32.032Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 1 endpoint(s) beneath base path '/actuator'
[2022-07-26T22:11:32.032Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-26T22:11:32.032Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-26T22:11:32.032Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-26T22:11:32.032Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658853692196, current=UP, previous=STARTING]
[2022-07-26T22:11:32.032Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [547] [INFO ] Completed initialization in 1 ms
[2022-07-26T22:11:32.032Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:11:32.032Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:11:32.032Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [143] [INFO ] isAws returned false
[2022-07-26T22:11:32.032Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [109] [INFO ] Initialized server context
[2022-07-26T22:11:32.032Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-26T22:11:32.032Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [144] [INFO ] Updating port to 8081
[2022-07-26T22:11:32.032Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:11:32.032Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started DoctorServiceApplication in 5.648 seconds (JVM running for 6.491)
[2022-07-26T22:12:01.001Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1007] [INFO ] Disable delta property : false
[2022-07-26T22:12:01.001Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T22:12:01.001Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T22:12:01.001Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1010] [INFO ] Application is null : false
[2022-07-26T22:12:01.001Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T22:12:01.001Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1013] [INFO ] Application version is -1: false
[2022-07-26T22:12:01.001Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T22:12:01.001Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1106] [INFO ] The response status is 200
[2022-07-26T22:12:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [Thread-9] [266] [INFO ] Registered instance DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 with status UP (replication=true)
[2022-07-26T22:12:02.002Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [244] [INFO ] Got 1 instances from neighboring DS node
[2022-07-26T22:12:02.002Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [245] [INFO ] Renew threshold is: 1
[2022-07-26T22:12:02.002Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [256] [INFO ] Changing status to UP
[2022-07-26T22:12:02.002Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] [Thread-9] [69] [INFO ] Started Eureka Server
[2022-07-26T22:12:30.030Z] [com.doctorservice.service.DoctorServiceImpl] [http-nio-8081-exec-3] [45] [ERROR] User Not Found
[2022-07-26T22:13:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:14:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:15:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:16:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:16:31.031Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:17:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:18:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 11ms
[2022-07-26T22:19:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 15ms
[2022-07-26T22:20:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 3ms
[2022-07-26T22:21:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:21:31.031Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:22:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 4ms
[2022-07-26T22:23:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 5ms
[2022-07-26T22:24:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 1ms
[2022-07-26T22:25:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 3ms
[2022-07-26T22:26:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 7ms
[2022-07-26T22:26:31.031Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:26:32.032Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [ReplicaAwareInstanceRegistry - RenewalThresholdUpdater] [552] [INFO ] Current renewal threshold is : 1
[2022-07-26T22:27:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 8ms
[2022-07-26T22:28:02.002Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:28:08.008Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(22)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2022-07-26T22:28:08.008Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(22)-127.0.0.1] [62] [INFO ] Unregistering application DOCTOR-SERVICE with eureka with status DOWN
[2022-07-26T22:28:08.008Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(22)-127.0.0.1] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658854688928, current=DOWN, previous=UP]
[2022-07-26T22:28:08.008Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:28:08.008Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:28:08.008Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(22)-127.0.0.1] [83] [INFO ] Shutting down Eureka Server..
[2022-07-26T22:28:08.008Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(22)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:28:08.008Z] [com.netflix.servo.monitor.StatsMonitor] [RMI TCP Connection(22)-127.0.0.1] [426] [INFO ] Attempting to get the value for an expired monitor: eurekaServer.replication.batchSize.Will start computing stats again.
[2022-07-26T22:28:09.009Z] [com.netflix.servo.monitor.StatsMonitor] [RMI TCP Connection(22)-127.0.0.1] [426] [INFO ] Attempting to get the value for an expired monitor: eurekaServer.replication.executionTime.Will start computing stats again.
[2022-07-26T22:28:09.009Z] [com.netflix.servo.monitor.StatsMonitor] [RMI TCP Connection(22)-127.0.0.1] [426] [INFO ] Attempting to get the value for an expired monitor: eurekaServer.replication.executionTime.Will start computing stats again.
[2022-07-26T22:28:09.009Z] [com.netflix.servo.monitor.StatsMonitor] [RMI TCP Connection(22)-127.0.0.1] [426] [INFO ] Attempting to get the value for an expired monitor: eurekaServer.replication.batchSize.Will start computing stats again.
[2022-07-26T22:28:09.009Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(22)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:28:09.009Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(22)-127.0.0.1] [93] [INFO ] Eureka Service is now shutdown...
[2022-07-26T22:28:09.009Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(22)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:28:09.009Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(22)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:28:09.009Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [RMI TCP Connection(22)-127.0.0.1] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:28:09.009Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(22)-127.0.0.1] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-26T22:28:09.009Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(22)-127.0.0.1] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-26T22:28:09.009Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(22)-127.0.0.1] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T22:28:12.012Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(22)-127.0.0.1] [971] [INFO ] Unregistering ...
[2022-07-26T22:28:12.012Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(22)-127.0.0.1] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - deregister  status: 200
[2022-07-26T22:28:12.012Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(22)-127.0.0.1] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T22:28:19.019Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-26T22:28:19.019Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 30224 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T22:28:19.019Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T22:28:19.019Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T22:28:19.019Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 114 ms. Found 1 JPA repository interfaces.
[2022-07-26T22:28:20.020Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=3b9ae6e8-abb8-3a70-8480-4aa35b024e0c
[2022-07-26T22:28:20.020Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T22:28:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:28:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T22:28:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T22:28:20.020Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T22:28:20.020Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1414 ms
[2022-07-26T22:28:20.020Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [main] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T22:28:20.020Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:28:20.020Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:28:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:28:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:28:21.021Z] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T22:28:21.021Z] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-26T22:28:21.021Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-26T22:28:21.021Z] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-26T22:28:21.021Z] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-26T22:28:21.021Z] [org.hibernate.dialect.Dialect] [main] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T22:28:22.022Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T22:28:22.022Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:28:22.022Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T22:28:23.023Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [main] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T22:28:23.023Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [main] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T22:28:23.023Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1007] [INFO ] Disable delta property : false
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1010] [INFO ] Application is null : false
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1013] [INFO ] Application version is -1: true
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1106] [INFO ] The response status is 200
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [main] [492] [INFO ] Discovery Client initialized at timestamp 1658854703714 with initial instances count: 1
[2022-07-26T22:28:23.023Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [66] [INFO ] Initializing ...
[2022-07-26T22:28:23.023Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:28:23.023Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [109] [INFO ] Replica node URL:  http://localhost:8761/eureka/
[2022-07-26T22:28:23.023Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [main] [153] [INFO ] Finished initializing remote region registries. All known remote regions: []
[2022-07-26T22:28:23.023Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [73] [INFO ] Initialized
[2022-07-26T22:28:23.023Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 1 endpoint(s) beneath base path '/actuator'
[2022-07-26T22:28:23.023Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658854703952, current=UP, previous=STARTING]
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:28:23.023Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:28:23.023Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [143] [INFO ] isAws returned false
[2022-07-26T22:28:23.023Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [109] [INFO ] Initialized server context
[2022-07-26T22:28:23.023Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [Thread-9] [266] [INFO ] Registered instance DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 with status UP (replication=true)
[2022-07-26T22:28:23.023Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [244] [INFO ] Got 1 instances from neighboring DS node
[2022-07-26T22:28:23.023Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [245] [INFO ] Renew threshold is: 1
[2022-07-26T22:28:23.023Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [256] [INFO ] Changing status to UP
[2022-07-26T22:28:23.023Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:28:23.023Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-26T22:28:23.023Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [144] [INFO ] Updating port to 8081
[2022-07-26T22:28:24.024Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] [Thread-9] [69] [INFO ] Started Eureka Server
[2022-07-26T22:28:24.024Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started DoctorServiceApplication in 5.473 seconds (JVM running for 6.318)
[2022-07-26T22:28:24.024Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(4)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-26T22:28:24.024Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(4)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-26T22:28:24.024Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(4)-127.0.0.1] [547] [INFO ] Completed initialization in 1 ms
[2022-07-26T22:28:30.030Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-1] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy196.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy196.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy198.save(Unknown Source)
	at com.doctorservice.service.DoctorServiceImpl.editProfile(DoctorServiceImpl.java:36)
	at com.doctorservice.controller.DoctorController.editProfile(DoctorController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:29:23.023Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:30:04.004Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-4] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy196.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy196.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy198.save(Unknown Source)
	at com.doctorservice.service.DoctorServiceImpl.editProfile(DoctorServiceImpl.java:36)
	at com.doctorservice.controller.DoctorController.editProfile(DoctorController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:30:07.007Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-6] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy196.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy196.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy198.save(Unknown Source)
	at com.doctorservice.service.DoctorServiceImpl.editProfile(DoctorServiceImpl.java:36)
	at com.doctorservice.controller.DoctorController.editProfile(DoctorController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:30:14.014Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(7)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2022-07-26T22:30:14.014Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(7)-127.0.0.1] [62] [INFO ] Unregistering application DOCTOR-SERVICE with eureka with status DOWN
[2022-07-26T22:30:14.014Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(7)-127.0.0.1] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658854814471, current=DOWN, previous=UP]
[2022-07-26T22:30:14.014Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:30:14.014Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:30:14.014Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(7)-127.0.0.1] [83] [INFO ] Shutting down Eureka Server..
[2022-07-26T22:30:14.014Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(7)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:30:14.014Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(7)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:30:14.014Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(7)-127.0.0.1] [93] [INFO ] Eureka Service is now shutdown...
[2022-07-26T22:30:14.014Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(7)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:30:14.014Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(7)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:30:14.014Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [RMI TCP Connection(7)-127.0.0.1] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:30:14.014Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(7)-127.0.0.1] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-26T22:30:14.014Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(7)-127.0.0.1] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-26T22:30:14.014Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(7)-127.0.0.1] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T22:30:17.017Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(7)-127.0.0.1] [971] [INFO ] Unregistering ...
[2022-07-26T22:30:17.017Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(7)-127.0.0.1] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - deregister  status: 200
[2022-07-26T22:30:18.018Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(7)-127.0.0.1] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T22:30:26.026Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-26T22:30:26.026Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 25492 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T22:30:26.026Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T22:30:26.026Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T22:30:27.027Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 118 ms. Found 1 JPA repository interfaces.
[2022-07-26T22:30:27.027Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=3b9ae6e8-abb8-3a70-8480-4aa35b024e0c
[2022-07-26T22:30:27.027Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T22:30:27.027Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:30:27.027Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T22:30:27.027Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T22:30:27.027Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T22:30:27.027Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1448 ms
[2022-07-26T22:30:27.027Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [main] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T22:30:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:30:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:30:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:30:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:30:28.028Z] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T22:30:28.028Z] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-26T22:30:28.028Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-26T22:30:28.028Z] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-26T22:30:28.028Z] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-26T22:30:28.028Z] [org.hibernate.dialect.Dialect] [main] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T22:30:29.029Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T22:30:29.029Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:30:29.029Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T22:30:30.030Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [main] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T22:30:30.030Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [main] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T22:30:30.030Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1007] [INFO ] Disable delta property : false
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1010] [INFO ] Application is null : false
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1013] [INFO ] Application version is -1: true
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1106] [INFO ] The response status is 200
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.DiscoveryClient] [main] [492] [INFO ] Discovery Client initialized at timestamp 1658854830887 with initial instances count: 0
[2022-07-26T22:30:30.030Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [66] [INFO ] Initializing ...
[2022-07-26T22:30:30.030Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:30:30.030Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:30:31.031Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [109] [INFO ] Replica node URL:  http://localhost:8761/eureka/
[2022-07-26T22:30:31.031Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [main] [153] [INFO ] Finished initializing remote region registries. All known remote regions: []
[2022-07-26T22:30:31.031Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [73] [INFO ] Initialized
[2022-07-26T22:30:31.031Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 1 endpoint(s) beneath base path '/actuator'
[2022-07-26T22:30:31.031Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-26T22:30:31.031Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658854831133, current=UP, previous=STARTING]
[2022-07-26T22:30:31.031Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:30:31.031Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:30:31.031Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [143] [INFO ] isAws returned false
[2022-07-26T22:30:31.031Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [109] [INFO ] Initialized server context
[2022-07-26T22:30:31.031Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-26T22:30:31.031Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [144] [INFO ] Updating port to 8081
[2022-07-26T22:30:31.031Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:30:31.031Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started DoctorServiceApplication in 5.611 seconds (JVM running for 6.461)
[2022-07-26T22:30:32.032Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-26T22:30:32.032Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-26T22:30:32.032Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [547] [INFO ] Completed initialization in 1 ms
[2022-07-26T22:30:36.036Z] [com.doctorservice.service.DoctorServiceImpl] [http-nio-8081-exec-2] [45] [ERROR] User Not Found
[2022-07-26T22:31:00.000Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1007] [INFO ] Disable delta property : false
[2022-07-26T22:31:00.000Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T22:31:00.000Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T22:31:00.000Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1010] [INFO ] Application is null : false
[2022-07-26T22:31:00.000Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T22:31:00.000Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1013] [INFO ] Application version is -1: false
[2022-07-26T22:31:00.000Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T22:31:00.000Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1106] [INFO ] The response status is 200
[2022-07-26T22:31:01.001Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [Thread-9] [266] [INFO ] Registered instance DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 with status UP (replication=true)
[2022-07-26T22:31:01.001Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [244] [INFO ] Got 1 instances from neighboring DS node
[2022-07-26T22:31:01.001Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [245] [INFO ] Renew threshold is: 1
[2022-07-26T22:31:01.001Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [256] [INFO ] Changing status to UP
[2022-07-26T22:31:01.001Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] [Thread-9] [69] [INFO ] Started Eureka Server
[2022-07-26T22:32:01.001Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:33:01.001Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:34:01.001Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 7ms
[2022-07-26T22:35:01.001Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 1ms
[2022-07-26T22:35:30.030Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:36:01.001Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 16ms
[2022-07-26T22:37:01.001Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 3ms
[2022-07-26T22:38:01.001Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:38:25.025Z] [com.doctorservice.service.DoctorServiceImpl] [http-nio-8081-exec-1] [45] [ERROR] User Not Found
[2022-07-26T22:39:01.001Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:40:01.001Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:40:19.019Z] [com.doctorservice.service.DoctorServiceImpl] [http-nio-8081-exec-4] [45] [ERROR] User Not Found
[2022-07-26T22:40:30.030Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:40:44.044Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(14)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2022-07-26T22:40:44.044Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(14)-127.0.0.1] [62] [INFO ] Unregistering application DOCTOR-SERVICE with eureka with status DOWN
[2022-07-26T22:40:44.044Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(14)-127.0.0.1] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658855444119, current=DOWN, previous=UP]
[2022-07-26T22:40:44.044Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:40:44.044Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:40:44.044Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(14)-127.0.0.1] [83] [INFO ] Shutting down Eureka Server..
[2022-07-26T22:40:44.044Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(14)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:40:44.044Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(14)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:40:44.044Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(14)-127.0.0.1] [93] [INFO ] Eureka Service is now shutdown...
[2022-07-26T22:40:44.044Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(14)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:40:44.044Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(14)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:40:44.044Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [RMI TCP Connection(14)-127.0.0.1] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:40:44.044Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(14)-127.0.0.1] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-26T22:40:44.044Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(14)-127.0.0.1] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-26T22:40:44.044Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(14)-127.0.0.1] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T22:40:47.047Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(14)-127.0.0.1] [971] [INFO ] Unregistering ...
[2022-07-26T22:40:47.047Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(14)-127.0.0.1] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - deregister  status: 200
[2022-07-26T22:40:47.047Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(14)-127.0.0.1] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T22:40:51.051Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-26T22:40:51.051Z] [org.springframework.boot.StartupInfoLogger] [main] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 12004 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T22:40:51.051Z] [org.springframework.boot.SpringApplication] [main] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T22:40:52.052Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T22:40:52.052Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [main] [201] [INFO ] Finished Spring Data repository scanning in 118 ms. Found 1 JPA repository interfaces.
[2022-07-26T22:40:52.052Z] [org.springframework.cloud.context.scope.GenericScope] [main] [283] [INFO ] BeanFactory id=3b9ae6e8-abb8-3a70-8480-4aa35b024e0c
[2022-07-26T22:40:53.053Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T22:40:53.053Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:40:53.053Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T22:40:53.053Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T22:40:53.053Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T22:40:53.053Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [main] [292] [INFO ] Root WebApplicationContext: initialization completed in 1573 ms
[2022-07-26T22:40:53.053Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [main] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T22:40:53.053Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:40:53.053Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:40:53.053Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:40:53.053Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:40:54.054Z] [org.hibernate.jpa.internal.util.LogHelper] [main] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T22:40:54.054Z] [org.hibernate.Version] [main] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-26T22:40:54.054Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [main] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-26T22:40:54.054Z] [com.zaxxer.hikari.HikariDataSource] [main] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-26T22:40:54.054Z] [com.zaxxer.hikari.HikariDataSource] [main] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-26T22:40:54.054Z] [org.hibernate.dialect.Dialect] [main] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T22:40:55.055Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [main] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T22:40:55.055Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [main] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:40:55.055Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [main] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T22:40:56.056Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [main] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T22:40:56.056Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [main] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T22:40:56.056Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [main] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [main] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [1007] [INFO ] Disable delta property : false
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [1010] [INFO ] Application is null : false
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [1013] [INFO ] Application version is -1: true
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [1106] [INFO ] The response status is 200
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.InstanceInfoReplicator] [main] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.DiscoveryClient] [main] [492] [INFO ] Discovery Client initialized at timestamp 1658855456832 with initial instances count: 1
[2022-07-26T22:40:56.056Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [66] [INFO ] Initializing ...
[2022-07-26T22:40:56.056Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:40:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [main] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:40:57.057Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [main] [109] [INFO ] Replica node URL:  http://localhost:8761/eureka/
[2022-07-26T22:40:57.057Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [main] [153] [INFO ] Finished initializing remote region registries. All known remote regions: []
[2022-07-26T22:40:57.057Z] [com.netflix.eureka.DefaultEurekaServerContext] [main] [73] [INFO ] Initialized
[2022-07-26T22:40:57.057Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [main] [58] [INFO ] Exposing 1 endpoint(s) beneath base path '/actuator'
[2022-07-26T22:40:57.057Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [main] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-26T22:40:57.057Z] [com.netflix.discovery.DiscoveryClient$3] [main] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658855457104, current=UP, previous=STARTING]
[2022-07-26T22:40:57.057Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:40:57.057Z] [org.apache.juli.logging.DirectJDKLog] [main] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:40:57.057Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [143] [INFO ] isAws returned false
[2022-07-26T22:40:57.057Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-9] [109] [INFO ] Initialized server context
[2022-07-26T22:40:57.057Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [Thread-9] [266] [INFO ] Registered instance DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 with status UP (replication=true)
[2022-07-26T22:40:57.057Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [244] [INFO ] Got 1 instances from neighboring DS node
[2022-07-26T22:40:57.057Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [245] [INFO ] Renew threshold is: 1
[2022-07-26T22:40:57.057Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-9] [256] [INFO ] Changing status to UP
[2022-07-26T22:40:57.057Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:40:57.057Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [main] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-26T22:40:57.057Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [main] [144] [INFO ] Updating port to 8081
[2022-07-26T22:40:57.057Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] [Thread-9] [69] [INFO ] Started Eureka Server
[2022-07-26T22:40:57.057Z] [org.springframework.boot.StartupInfoLogger] [main] [61] [INFO ] Started DoctorServiceApplication in 6.065 seconds (JVM running for 6.896)
[2022-07-26T22:40:58.058Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-26T22:40:58.058Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-26T22:40:58.058Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [547] [INFO ] Completed initialization in 1 ms
[2022-07-26T22:41:57.057Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:42:01.001Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-1] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy196.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy196.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy198.save(Unknown Source)
	at com.doctorservice.service.DoctorServiceImpl.editProfile(DoctorServiceImpl.java:37)
	at com.doctorservice.controller.DoctorController.editProfile(DoctorController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:42:57.057Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:43:57.057Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:44:57.057Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:45:06.006Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-7] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy196.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy196.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy198.save(Unknown Source)
	at com.doctorservice.service.DoctorServiceImpl.editProfile(DoctorServiceImpl.java:37)
	at com.doctorservice.controller.DoctorController.editProfile(DoctorController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:45:15.015Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(10)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2022-07-26T22:45:15.015Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(10)-127.0.0.1] [62] [INFO ] Unregistering application DOCTOR-SERVICE with eureka with status DOWN
[2022-07-26T22:45:15.015Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(10)-127.0.0.1] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658855715620, current=DOWN, previous=UP]
[2022-07-26T22:45:15.015Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:45:15.015Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:45:15.015Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(10)-127.0.0.1] [83] [INFO ] Shutting down Eureka Server..
[2022-07-26T22:45:15.015Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(10)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:45:15.015Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(10)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:45:15.015Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(10)-127.0.0.1] [93] [INFO ] Eureka Service is now shutdown...
[2022-07-26T22:45:15.015Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(10)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:45:15.015Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(10)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:45:15.015Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [RMI TCP Connection(10)-127.0.0.1] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:45:15.015Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(10)-127.0.0.1] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-26T22:45:15.015Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(10)-127.0.0.1] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-26T22:45:15.015Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(10)-127.0.0.1] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T22:45:18.018Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(10)-127.0.0.1] [971] [INFO ] Unregistering ...
[2022-07-26T22:45:18.018Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(10)-127.0.0.1] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - deregister  status: 200
[2022-07-26T22:45:19.019Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(10)-127.0.0.1] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T22:45:23.023Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-26T22:45:23.023Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 23444 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T22:45:23.023Z] [org.springframework.boot.SpringApplication] [restartedMain] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T22:45:23.023Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [255] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-26T22:45:23.023Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [255] [INFO ] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-26T22:45:24.024Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T22:45:24.024Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [201] [INFO ] Finished Spring Data repository scanning in 118 ms. Found 1 JPA repository interfaces.
[2022-07-26T22:45:24.024Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [283] [INFO ] BeanFactory id=ce8945c9-5c64-3aa3-aa10-659655878de9
[2022-07-26T22:45:25.025Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T22:45:25.025Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:45:25.025Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T22:45:25.025Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T22:45:25.025Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T22:45:25.025Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [292] [INFO ] Root WebApplicationContext: initialization completed in 1822 ms
[2022-07-26T22:45:25.025Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [restartedMain] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T22:45:25.025Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:45:25.025Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:45:25.025Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:45:25.025Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:45:26.026Z] [org.hibernate.jpa.internal.util.LogHelper] [restartedMain] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T22:45:26.026Z] [org.hibernate.Version] [restartedMain] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-26T22:45:26.026Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [restartedMain] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-26T22:45:26.026Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-26T22:45:26.026Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-26T22:45:26.026Z] [org.hibernate.dialect.Dialect] [restartedMain] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T22:45:27.027Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [restartedMain] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T22:45:27.027Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [restartedMain] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:45:27.027Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [restartedMain] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T22:45:28.028Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2022-07-26T22:45:28.028Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [restartedMain] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T22:45:28.028Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [restartedMain] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T22:45:28.028Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1007] [INFO ] Disable delta property : false
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1010] [INFO ] Application is null : false
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1013] [INFO ] Application version is -1: true
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1106] [INFO ] The response status is 200
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [492] [INFO ] Discovery Client initialized at timestamp 1658855728925 with initial instances count: 1
[2022-07-26T22:45:28.028Z] [com.netflix.eureka.DefaultEurekaServerContext] [restartedMain] [66] [INFO ] Initializing ...
[2022-07-26T22:45:28.028Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [restartedMain] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:45:28.028Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:45:29.029Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [restartedMain] [109] [INFO ] Replica node URL:  http://localhost:8761/eureka/
[2022-07-26T22:45:29.029Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [restartedMain] [153] [INFO ] Finished initializing remote region registries. All known remote regions: []
[2022-07-26T22:45:29.029Z] [com.netflix.eureka.DefaultEurekaServerContext] [restartedMain] [73] [INFO ] Initialized
[2022-07-26T22:45:29.029Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [restartedMain] [58] [INFO ] Exposing 1 endpoint(s) beneath base path '/actuator'
[2022-07-26T22:45:29.029Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [restartedMain] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-26T22:45:29.029Z] [com.netflix.discovery.DiscoveryClient$3] [restartedMain] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658855729178, current=UP, previous=STARTING]
[2022-07-26T22:45:29.029Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:45:29.029Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:45:29.029Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-15] [143] [INFO ] isAws returned false
[2022-07-26T22:45:29.029Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-15] [109] [INFO ] Initialized server context
[2022-07-26T22:45:29.029Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [Thread-15] [266] [INFO ] Registered instance DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 with status UP (replication=true)
[2022-07-26T22:45:29.029Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-15] [244] [INFO ] Got 1 instances from neighboring DS node
[2022-07-26T22:45:29.029Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-15] [245] [INFO ] Renew threshold is: 1
[2022-07-26T22:45:29.029Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-15] [256] [INFO ] Changing status to UP
[2022-07-26T22:45:29.029Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:45:29.029Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-26T22:45:29.029Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [restartedMain] [144] [INFO ] Updating port to 8081
[2022-07-26T22:45:29.029Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] [Thread-15] [69] [INFO ] Started Eureka Server
[2022-07-26T22:45:29.029Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started DoctorServiceApplication in 6.225 seconds (JVM running for 7.11)
[2022-07-26T22:45:29.029Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-26T22:45:29.029Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-26T22:45:29.029Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [547] [INFO ] Completed initialization in 1 ms
[2022-07-26T22:45:36.036Z] [com.doctorservice.service.DoctorServiceImpl] [http-nio-8081-exec-2] [45] [ERROR] User Not Found
[2022-07-26T22:46:29.029Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:47:29.029Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:48:29.029Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:49:29.029Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:50:28.028Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:50:29.029Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:51:29.029Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:52:13.013Z] [com.doctorservice.service.DoctorServiceImpl] [http-nio-8081-exec-5] [45] [ERROR] User Not Found
[2022-07-26T22:52:29.029Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:52:35.035Z] [com.doctorservice.service.DoctorServiceImpl] [http-nio-8081-exec-6] [45] [ERROR] User Not Found
[2022-07-26T22:52:47.047Z] [org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] [RMI TCP Connection(13)-127.0.0.1] [159] [INFO ] Application shutdown requested.
[2022-07-26T22:52:47.047Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [RMI TCP Connection(13)-127.0.0.1] [62] [INFO ] Unregistering application DOCTOR-SERVICE with eureka with status DOWN
[2022-07-26T22:52:47.047Z] [com.netflix.discovery.DiscoveryClient$3] [RMI TCP Connection(13)-127.0.0.1] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658856167744, current=DOWN, previous=UP]
[2022-07-26T22:52:47.047Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:52:47.047Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:52:47.047Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(13)-127.0.0.1] [83] [INFO ] Shutting down Eureka Server..
[2022-07-26T22:52:47.047Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(13)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:52:47.047Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(13)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:52:47.047Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [RMI TCP Connection(13)-127.0.0.1] [93] [INFO ] Eureka Service is now shutdown...
[2022-07-26T22:52:47.047Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(13)-127.0.0.1] [79] [INFO ] Shutting down ...
[2022-07-26T22:52:48.048Z] [com.netflix.eureka.DefaultEurekaServerContext] [RMI TCP Connection(13)-127.0.0.1] [84] [INFO ] Shut down
[2022-07-26T22:52:48.048Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [RMI TCP Connection(13)-127.0.0.1] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:52:48.048Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(13)-127.0.0.1] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-26T22:52:48.048Z] [com.zaxxer.hikari.HikariDataSource] [RMI TCP Connection(13)-127.0.0.1] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-26T22:52:48.048Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(13)-127.0.0.1] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T22:52:51.051Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(13)-127.0.0.1] [971] [INFO ] Unregistering ...
[2022-07-26T22:52:51.051Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(13)-127.0.0.1] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - deregister  status: 200
[2022-07-26T22:52:51.051Z] [com.netflix.discovery.DiscoveryClient] [RMI TCP Connection(13)-127.0.0.1] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T22:53:08.008Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-26T22:53:08.008Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 26324 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T22:53:08.008Z] [org.springframework.boot.SpringApplication] [restartedMain] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T22:53:08.008Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [255] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-26T22:53:08.008Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [255] [INFO ] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-26T22:53:09.009Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T22:53:09.009Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [201] [INFO ] Finished Spring Data repository scanning in 124 ms. Found 1 JPA repository interfaces.
[2022-07-26T22:53:09.009Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [283] [INFO ] BeanFactory id=ce8945c9-5c64-3aa3-aa10-659655878de9
[2022-07-26T22:53:10.010Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T22:53:10.010Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:53:10.010Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T22:53:10.010Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T22:53:10.010Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T22:53:10.010Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [292] [INFO ] Root WebApplicationContext: initialization completed in 1804 ms
[2022-07-26T22:53:10.010Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [restartedMain] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T22:53:11.011Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:53:11.011Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:53:11.011Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:53:11.011Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:53:11.011Z] [org.hibernate.jpa.internal.util.LogHelper] [restartedMain] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T22:53:11.011Z] [org.hibernate.Version] [restartedMain] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-26T22:53:11.011Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [restartedMain] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-26T22:53:11.011Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-26T22:53:11.011Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-26T22:53:11.011Z] [org.hibernate.dialect.Dialect] [restartedMain] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T22:53:12.012Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [restartedMain] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T22:53:12.012Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [restartedMain] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T22:53:12.012Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [restartedMain] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T22:53:13.013Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2022-07-26T22:53:13.013Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [restartedMain] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T22:53:13.013Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [restartedMain] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T22:53:13.013Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T22:53:13.013Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T22:53:13.013Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:53:13.013Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:53:13.013Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:53:13.013Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1007] [INFO ] Disable delta property : false
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1010] [INFO ] Application is null : false
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1013] [INFO ] Application version is -1: true
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1106] [INFO ] The response status is 200
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [492] [INFO ] Discovery Client initialized at timestamp 1658856194152 with initial instances count: 0
[2022-07-26T22:53:14.014Z] [com.netflix.eureka.DefaultEurekaServerContext] [restartedMain] [66] [INFO ] Initializing ...
[2022-07-26T22:53:14.014Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [restartedMain] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T22:53:14.014Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(3)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-26T22:53:14.014Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-26T22:53:14.014Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [restartedMain] [109] [INFO ] Replica node URL:  http://localhost:8761/eureka/
[2022-07-26T22:53:14.014Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [restartedMain] [153] [INFO ] Finished initializing remote region registries. All known remote regions: []
[2022-07-26T22:53:14.014Z] [com.netflix.eureka.DefaultEurekaServerContext] [restartedMain] [73] [INFO ] Initialized
[2022-07-26T22:53:14.014Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [RMI TCP Connection(3)-127.0.0.1] [58] [INFO ] Exposing 1 endpoint(s) beneath base path '/actuator'
[2022-07-26T22:53:14.014Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(3)-127.0.0.1] [547] [INFO ] Completed initialization in 152 ms
[2022-07-26T22:53:14.014Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [restartedMain] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient$3] [restartedMain] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658856194439, current=UP, previous=STARTING]
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T22:53:14.014Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-26T22:53:14.014Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-15] [143] [INFO ] isAws returned false
[2022-07-26T22:53:14.014Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-15] [109] [INFO ] Initialized server context
[2022-07-26T22:53:14.014Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T22:53:14.014Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-26T22:53:14.014Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [restartedMain] [144] [INFO ] Updating port to 8081
[2022-07-26T22:53:14.014Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started DoctorServiceApplication in 6.244 seconds (JVM running for 7.136)
[2022-07-26T22:53:21.021Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-1] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy3/jdk.proxy3.$Proxy199.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy3/jdk.proxy3.$Proxy199.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy201.save(Unknown Source)
	at com.doctorservice.service.DoctorServiceImpl.editProfile(DoctorServiceImpl.java:37)
	at com.doctorservice.controller.DoctorController.editProfile(DoctorController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:53:44.044Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1007] [INFO ] Disable delta property : false
[2022-07-26T22:53:44.044Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T22:53:44.044Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T22:53:44.044Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1010] [INFO ] Application is null : false
[2022-07-26T22:53:44.044Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T22:53:44.044Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1013] [INFO ] Application version is -1: false
[2022-07-26T22:53:44.044Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T22:53:44.044Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1106] [INFO ] The response status is 200
[2022-07-26T22:53:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [Thread-15] [266] [INFO ] Registered instance DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 with status UP (replication=true)
[2022-07-26T22:53:44.044Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-15] [244] [INFO ] Got 1 instances from neighboring DS node
[2022-07-26T22:53:44.044Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-15] [245] [INFO ] Renew threshold is: 1
[2022-07-26T22:53:44.044Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-15] [256] [INFO ] Changing status to UP
[2022-07-26T22:53:44.044Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] [Thread-15] [69] [INFO ] Started Eureka Server
[2022-07-26T22:54:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:55:11.011Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-4] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy3/jdk.proxy3.$Proxy199.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy3/jdk.proxy3.$Proxy199.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy201.save(Unknown Source)
	at com.doctorservice.service.DoctorServiceImpl.editProfile(DoctorServiceImpl.java:37)
	at com.doctorservice.controller.DoctorController.editProfile(DoctorController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:55:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:56:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:57:10.010Z] [org.apache.juli.logging.DirectJDKLog] [http-nio-8081-exec-6] [175] [ERROR] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]] with root cause
javax.validation.ConstraintViolationException: Validation failed for classes [com.doctorservice.entity.DoctorEntity] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=name, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=email, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=contactNo, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
	ConstraintViolationImpl{interpolatedMessage='must not be null', propertyPath=password, rootBeanClass=class com.doctorservice.entity.DoctorEntity, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy3/jdk.proxy3.$Proxy199.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy3/jdk.proxy3.$Proxy199.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy3/jdk.proxy3.$Proxy201.save(Unknown Source)
	at com.doctorservice.service.DoctorServiceImpl.editProfile(DoctorServiceImpl.java:37)
	at com.doctorservice.controller.DoctorController.editProfile(DoctorController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1070)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:684)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
[2022-07-26T22:57:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:58:14.014Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T22:58:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T22:59:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T23:00:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T23:01:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T23:02:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T23:03:14.014Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T23:03:44.044Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T23:04:12.012Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [Thread-7] [62] [INFO ] Unregistering application DOCTOR-SERVICE with eureka with status DOWN
[2022-07-26T23:04:12.012Z] [com.netflix.discovery.DiscoveryClient$3] [Thread-7] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658856852011, current=DOWN, previous=UP]
[2022-07-26T23:04:12.012Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T23:04:12.012Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T23:04:12.012Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-7] [83] [INFO ] Shutting down Eureka Server..
[2022-07-26T23:04:12.012Z] [com.netflix.eureka.DefaultEurekaServerContext] [Thread-7] [79] [INFO ] Shutting down ...
[2022-07-26T23:04:12.012Z] [com.netflix.eureka.DefaultEurekaServerContext] [Thread-7] [84] [INFO ] Shut down
[2022-07-26T23:04:12.012Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-7] [93] [INFO ] Eureka Service is now shutdown...
[2022-07-26T23:04:12.012Z] [com.netflix.eureka.DefaultEurekaServerContext] [Thread-7] [79] [INFO ] Shutting down ...
[2022-07-26T23:04:12.012Z] [com.netflix.eureka.DefaultEurekaServerContext] [Thread-7] [84] [INFO ] Shut down
[2022-07-26T23:04:12.012Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [Thread-7] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T23:04:12.012Z] [com.zaxxer.hikari.HikariDataSource] [Thread-7] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-26T23:04:12.012Z] [com.zaxxer.hikari.HikariDataSource] [Thread-7] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-26T23:04:12.012Z] [com.netflix.discovery.DiscoveryClient] [Thread-7] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T23:04:15.015Z] [com.netflix.discovery.TimedSupervisorTask] [DiscoveryClient-0] [90] [WARN ] task supervisor shutting down, can't accept the task
[2022-07-26T23:04:15.015Z] [com.netflix.discovery.DiscoveryClient] [Thread-7] [971] [INFO ] Unregistering ...
[2022-07-26T23:04:15.015Z] [com.netflix.discovery.DiscoveryClient] [Thread-7] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - deregister  status: 200
[2022-07-26T23:04:15.015Z] [com.netflix.discovery.DiscoveryClient] [Thread-7] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T23:04:15.015Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 26324 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T23:04:15.015Z] [org.springframework.boot.SpringApplication] [restartedMain] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T23:04:16.016Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T23:04:16.016Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [201] [INFO ] Finished Spring Data repository scanning in 9 ms. Found 1 JPA repository interfaces.
[2022-07-26T23:04:16.016Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [283] [INFO ] BeanFactory id=ce8945c9-5c64-3aa3-aa10-659655878de9
[2022-07-26T23:04:16.016Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T23:04:16.016Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T23:04:16.016Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T23:04:16.016Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T23:04:16.016Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T23:04:16.016Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [292] [INFO ] Root WebApplicationContext: initialization completed in 478 ms
[2022-07-26T23:04:16.016Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [restartedMain] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T23:04:16.016Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:04:16.016Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:04:16.016Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:04:16.016Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:04:16.016Z] [org.hibernate.jpa.internal.util.LogHelper] [restartedMain] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T23:04:16.016Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [110] [INFO ] HikariPool-2 - Starting...
[2022-07-26T23:04:16.016Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [123] [INFO ] HikariPool-2 - Start completed.
[2022-07-26T23:04:16.016Z] [org.hibernate.dialect.Dialect] [restartedMain] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T23:04:16.016Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [restartedMain] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T23:04:16.016Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [restartedMain] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T23:04:16.016Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [restartedMain] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T23:04:16.016Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2022-07-26T23:04:16.016Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [restartedMain] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T23:04:17.017Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [restartedMain] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T23:04:17.017Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1007] [INFO ] Disable delta property : false
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1010] [INFO ] Application is null : false
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1013] [INFO ] Application version is -1: true
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1106] [INFO ] The response status is 200
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [492] [INFO ] Discovery Client initialized at timestamp 1658856857239 with initial instances count: 1
[2022-07-26T23:04:17.017Z] [com.netflix.eureka.DefaultEurekaServerContext] [restartedMain] [66] [INFO ] Initializing ...
[2022-07-26T23:04:17.017Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [restartedMain] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:04:17.017Z] [org.springframework.context.support.AbstractApplicationContext] [restartedMain] [591] [WARN ] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration': Unsatisfied dependency expressed through field 'eurekaServerBootstrap'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaServerBootstrap' defined in class path resource [org/springframework/cloud/netflix/eureka/server/EurekaServerAutoConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaServerBootstrap' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@171e962a[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@6e935fb8[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@56b9ea88]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
[2022-07-26T23:04:17.017Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [restartedMain] [178] [ERROR] Cannot shutdown ReplicaAwareInstanceRegistry
java.lang.NullPointerException: Cannot invoke "com.netflix.eureka.cluster.PeerEurekaNodes.shutdown()" because "this.peerEurekaNodes" is null
	at com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.shutdown(PeerAwareInstanceRegistryImpl.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:319)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:596)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
[2022-07-26T23:04:17.017Z] [org.springframework.beans.factory.support.DisposableBeanAdapter] [restartedMain] [329] [WARN ] Custom destroy method 'shutdown' on bean with name 'peerAwareInstanceRegistry' threw an exception: java.lang.NullPointerException: Cannot invoke "com.netflix.eureka.registry.ResponseCache.stop()" because "this.responseCache" is null
[2022-07-26T23:04:17.017Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [restartedMain] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T23:04:17.017Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [350] [INFO ] HikariPool-2 - Shutdown initiated...
[2022-07-26T23:04:17.017Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [352] [INFO ] HikariPool-2 - Shutdown completed.
[2022-07-26T23:04:17.017Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T23:04:20.020Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [971] [INFO ] Unregistering ...
[2022-07-26T23:04:20.020Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - deregister  status: 404
[2022-07-26T23:04:20.020Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T23:04:20.020Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Stopping service [Tomcat]
[2022-07-26T23:04:20.020Z] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [restartedMain] [136] [INFO ] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2022-07-26T23:04:20.020Z] [org.springframework.boot.SpringApplication] [restartedMain] [824] [ERROR] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration': Unsatisfied dependency expressed through field 'eurekaServerBootstrap'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaServerBootstrap' defined in class path resource [org/springframework/cloud/netflix/eureka/server/EurekaServerAutoConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaServerBootstrap' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@171e962a[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@6e935fb8[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@56b9ea88]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaServerBootstrap' defined in class path resource [org/springframework/cloud/netflix/eureka/server/EurekaServerAutoConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaServerBootstrap' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@171e962a[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@6e935fb8[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@56b9ea88]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@171e962a[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@6e935fb8[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@56b9ea88]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 38 common frames omitted
Caused by: java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@171e962a[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@6e935fb8[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@56b9ea88]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
	at com.netflix.eureka.cluster.PeerEurekaNodes.start(PeerEurekaNodes.java:106)
	at com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:67)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:333)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:157)
	... 51 common frames omitted
Caused by: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@171e962a[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@6e935fb8[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@56b9ea88]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
	at java.base/java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2065)
	at java.base/java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:833)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:340)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.scheduleWithFixedDelay(ScheduledThreadPoolExecutor.java:680)
	at com.netflix.servo.monitor.StatsMonitor.startComputingStats(StatsMonitor.java:409)
	at com.netflix.servo.monitor.StatsMonitor.lambda$new$0(StatsMonitor.java:365)
	at com.netflix.servo.monitor.StatsMonitor.startComputingStats(StatsMonitor.java:377)
	at com.netflix.servo.monitor.StatsTimer.<init>(StatsTimer.java:70)
	at com.netflix.servo.monitor.StatsTimer.<init>(StatsTimer.java:47)
	at com.netflix.eureka.util.batcher.AcceptorExecutor.<init>(AcceptorExecutor.java:116)
	at com.netflix.eureka.util.batcher.TaskDispatchers.createBatchingTaskDispatcher(TaskDispatchers.java:43)
	at com.netflix.eureka.cluster.PeerEurekaNode.<init>(PeerEurekaNode.java:104)
	at com.netflix.eureka.cluster.PeerEurekaNode.<init>(PeerEurekaNode.java:87)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration$RefreshablePeerEurekaNodes.createPeerEurekaNode(EurekaServerAutoConfiguration.java:297)
	at com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:189)
	at com.netflix.eureka.cluster.PeerEurekaNodes.start(PeerEurekaNodes.java:87)
	... 59 common frames omitted
[2022-07-26T23:04:56.056Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 26324 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T23:04:56.056Z] [org.springframework.boot.SpringApplication] [restartedMain] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T23:04:56.056Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T23:04:56.056Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [201] [INFO ] Finished Spring Data repository scanning in 9 ms. Found 1 JPA repository interfaces.
[2022-07-26T23:04:56.056Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [283] [INFO ] BeanFactory id=ce8945c9-5c64-3aa3-aa10-659655878de9
[2022-07-26T23:04:56.056Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T23:04:56.056Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T23:04:56.056Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T23:04:56.056Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T23:04:56.056Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T23:04:56.056Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [292] [INFO ] Root WebApplicationContext: initialization completed in 415 ms
[2022-07-26T23:04:56.056Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [restartedMain] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T23:04:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:04:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:04:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:04:56.056Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:04:56.056Z] [org.hibernate.jpa.internal.util.LogHelper] [restartedMain] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T23:04:56.056Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [110] [INFO ] HikariPool-3 - Starting...
[2022-07-26T23:04:56.056Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [123] [INFO ] HikariPool-3 - Start completed.
[2022-07-26T23:04:56.056Z] [org.hibernate.dialect.Dialect] [restartedMain] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T23:04:56.056Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [restartedMain] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T23:04:56.056Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [restartedMain] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T23:04:57.057Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [restartedMain] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T23:04:57.057Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2022-07-26T23:04:57.057Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [restartedMain] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T23:04:57.057Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [restartedMain] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T23:04:57.057Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1007] [INFO ] Disable delta property : false
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1010] [INFO ] Application is null : false
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1013] [INFO ] Application version is -1: true
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1106] [INFO ] The response status is 200
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [492] [INFO ] Discovery Client initialized at timestamp 1658856897622 with initial instances count: 0
[2022-07-26T23:04:57.057Z] [com.netflix.eureka.DefaultEurekaServerContext] [restartedMain] [66] [INFO ] Initializing ...
[2022-07-26T23:04:57.057Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [restartedMain] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:04:57.057Z] [org.springframework.context.support.AbstractApplicationContext] [restartedMain] [591] [WARN ] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration': Unsatisfied dependency expressed through field 'eurekaServerBootstrap'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaServerBootstrap' defined in class path resource [org/springframework/cloud/netflix/eureka/server/EurekaServerAutoConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaServerBootstrap' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@35baa5ea[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@235c85ee[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@1b5dd2f2]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
[2022-07-26T23:04:57.057Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [restartedMain] [178] [ERROR] Cannot shutdown ReplicaAwareInstanceRegistry
java.lang.NullPointerException: Cannot invoke "com.netflix.eureka.cluster.PeerEurekaNodes.shutdown()" because "this.peerEurekaNodes" is null
	at com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.shutdown(PeerAwareInstanceRegistryImpl.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:319)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:596)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
[2022-07-26T23:04:57.057Z] [org.springframework.beans.factory.support.DisposableBeanAdapter] [restartedMain] [329] [WARN ] Custom destroy method 'shutdown' on bean with name 'peerAwareInstanceRegistry' threw an exception: java.lang.NullPointerException: Cannot invoke "com.netflix.eureka.registry.ResponseCache.stop()" because "this.responseCache" is null
[2022-07-26T23:04:57.057Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [restartedMain] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T23:04:57.057Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [350] [INFO ] HikariPool-3 - Shutdown initiated...
[2022-07-26T23:04:57.057Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [352] [INFO ] HikariPool-3 - Shutdown completed.
[2022-07-26T23:04:57.057Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T23:05:00.000Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [971] [INFO ] Unregistering ...
[2022-07-26T23:05:00.000Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - deregister  status: 404
[2022-07-26T23:05:00.000Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T23:05:00.000Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Stopping service [Tomcat]
[2022-07-26T23:05:00.000Z] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [restartedMain] [136] [INFO ] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2022-07-26T23:05:00.000Z] [org.springframework.boot.SpringApplication] [restartedMain] [824] [ERROR] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration': Unsatisfied dependency expressed through field 'eurekaServerBootstrap'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaServerBootstrap' defined in class path resource [org/springframework/cloud/netflix/eureka/server/EurekaServerAutoConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaServerBootstrap' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@35baa5ea[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@235c85ee[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@1b5dd2f2]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaServerBootstrap' defined in class path resource [org/springframework/cloud/netflix/eureka/server/EurekaServerAutoConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaServerBootstrap' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@35baa5ea[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@235c85ee[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@1b5dd2f2]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@35baa5ea[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@235c85ee[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@1b5dd2f2]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 38 common frames omitted
Caused by: java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@35baa5ea[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@235c85ee[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@1b5dd2f2]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
	at com.netflix.eureka.cluster.PeerEurekaNodes.start(PeerEurekaNodes.java:106)
	at com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:67)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:333)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:157)
	... 51 common frames omitted
Caused by: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@35baa5ea[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@235c85ee[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1467/0x0000000800b79860@1b5dd2f2]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@9c08a86[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 40]
	at java.base/java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2065)
	at java.base/java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:833)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:340)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.scheduleWithFixedDelay(ScheduledThreadPoolExecutor.java:680)
	at com.netflix.servo.monitor.StatsMonitor.startComputingStats(StatsMonitor.java:409)
	at com.netflix.servo.monitor.StatsMonitor.lambda$new$0(StatsMonitor.java:365)
	at com.netflix.servo.monitor.StatsMonitor.startComputingStats(StatsMonitor.java:377)
	at com.netflix.servo.monitor.StatsTimer.<init>(StatsTimer.java:70)
	at com.netflix.servo.monitor.StatsTimer.<init>(StatsTimer.java:47)
	at com.netflix.eureka.util.batcher.AcceptorExecutor.<init>(AcceptorExecutor.java:116)
	at com.netflix.eureka.util.batcher.TaskDispatchers.createBatchingTaskDispatcher(TaskDispatchers.java:43)
	at com.netflix.eureka.cluster.PeerEurekaNode.<init>(PeerEurekaNode.java:104)
	at com.netflix.eureka.cluster.PeerEurekaNode.<init>(PeerEurekaNode.java:87)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration$RefreshablePeerEurekaNodes.createPeerEurekaNode(EurekaServerAutoConfiguration.java:297)
	at com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:189)
	at com.netflix.eureka.cluster.PeerEurekaNodes.start(PeerEurekaNodes.java:87)
	... 59 common frames omitted
[2022-07-26T23:05:16.016Z] [org.hibernate.validator.internal.util.Version] [background-preinit] [21] [INFO ] HV000001: Hibernate Validator 6.2.3.Final
[2022-07-26T23:05:16.016Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 26308 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T23:05:16.016Z] [org.springframework.boot.SpringApplication] [restartedMain] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T23:05:16.016Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [255] [INFO ] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[2022-07-26T23:05:16.016Z] [org.springframework.boot.logging.DeferredLog] [restartedMain] [255] [INFO ] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[2022-07-26T23:05:17.017Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T23:05:17.017Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [201] [INFO ] Finished Spring Data repository scanning in 117 ms. Found 1 JPA repository interfaces.
[2022-07-26T23:05:17.017Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [283] [INFO ] BeanFactory id=ce8945c9-5c64-3aa3-aa10-659655878de9
[2022-07-26T23:05:17.017Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T23:05:17.017Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T23:05:17.017Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T23:05:17.017Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T23:05:18.018Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T23:05:18.018Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [292] [INFO ] Root WebApplicationContext: initialization completed in 1886 ms
[2022-07-26T23:05:18.018Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [restartedMain] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T23:05:18.018Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:05:18.018Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:05:18.018Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:05:18.018Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:05:19.019Z] [org.hibernate.jpa.internal.util.LogHelper] [restartedMain] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T23:05:19.019Z] [org.hibernate.Version] [restartedMain] [44] [INFO ] HHH000412: Hibernate ORM core version 5.6.10.Final
[2022-07-26T23:05:19.019Z] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager] [restartedMain] [56] [INFO ] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[2022-07-26T23:05:19.019Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [110] [INFO ] HikariPool-1 - Starting...
[2022-07-26T23:05:19.019Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [123] [INFO ] HikariPool-1 - Start completed.
[2022-07-26T23:05:19.019Z] [org.hibernate.dialect.Dialect] [restartedMain] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T23:05:20.020Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [restartedMain] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T23:05:20.020Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [restartedMain] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T23:05:20.020Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [restartedMain] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T23:05:21.021Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2022-07-26T23:05:21.021Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [restartedMain] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T23:05:21.021Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [restartedMain] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T23:05:21.021Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1007] [INFO ] Disable delta property : false
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1010] [INFO ] Application is null : false
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1013] [INFO ] Application version is -1: true
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1106] [INFO ] The response status is 200
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [492] [INFO ] Discovery Client initialized at timestamp 1658856921720 with initial instances count: 0
[2022-07-26T23:05:21.021Z] [com.netflix.eureka.DefaultEurekaServerContext] [restartedMain] [66] [INFO ] Initializing ...
[2022-07-26T23:05:21.021Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [restartedMain] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:05:21.021Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:05:21.021Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [restartedMain] [109] [INFO ] Replica node URL:  http://localhost:8761/eureka/
[2022-07-26T23:05:21.021Z] [org.apache.juli.logging.DirectJDKLog] [RMI TCP Connection(1)-127.0.0.1] [173] [INFO ] Initializing Spring DispatcherServlet 'dispatcherServlet'
[2022-07-26T23:05:21.021Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-127.0.0.1] [525] [INFO ] Initializing Servlet 'dispatcherServlet'
[2022-07-26T23:05:21.021Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [restartedMain] [153] [INFO ] Finished initializing remote region registries. All known remote regions: []
[2022-07-26T23:05:21.021Z] [com.netflix.eureka.DefaultEurekaServerContext] [restartedMain] [73] [INFO ] Initialized
[2022-07-26T23:05:21.021Z] [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver] [RMI TCP Connection(1)-127.0.0.1] [58] [INFO ] Exposing 1 endpoint(s) beneath base path '/actuator'
[2022-07-26T23:05:21.021Z] [org.springframework.web.servlet.FrameworkServlet] [RMI TCP Connection(1)-127.0.0.1] [547] [INFO ] Completed initialization in 34 ms
[2022-07-26T23:05:22.022Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [restartedMain] [41] [INFO ] Registering application DOCTOR-SERVICE with eureka with status UP
[2022-07-26T23:05:22.022Z] [com.netflix.discovery.DiscoveryClient$3] [restartedMain] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658856922011, current=UP, previous=STARTING]
[2022-07-26T23:05:22.022Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T23:05:22.022Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting ProtocolHandler ["http-nio-8081"]
[2022-07-26T23:05:22.022Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-15] [143] [INFO ] isAws returned false
[2022-07-26T23:05:22.022Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-15] [109] [INFO ] Initialized server context
[2022-07-26T23:05:22.022Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T23:05:22.022Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [220] [INFO ] Tomcat started on port(s): 8081 (http) with context path ''
[2022-07-26T23:05:22.022Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration] [restartedMain] [144] [INFO ] Updating port to 8081
[2022-07-26T23:05:22.022Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [61] [INFO ] Started DoctorServiceApplication in 6.433 seconds (JVM running for 7.351)
[2022-07-26T23:05:51.051Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1007] [INFO ] Disable delta property : false
[2022-07-26T23:05:51.051Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T23:05:51.051Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T23:05:51.051Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1010] [INFO ] Application is null : false
[2022-07-26T23:05:51.051Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T23:05:51.051Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1013] [INFO ] Application version is -1: false
[2022-07-26T23:05:51.051Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T23:05:51.051Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-CacheRefreshExecutor-0] [1106] [INFO ] The response status is 200
[2022-07-26T23:05:52.052Z] [com.netflix.eureka.registry.AbstractInstanceRegistry] [Thread-15] [266] [INFO ] Registered instance DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 with status UP (replication=true)
[2022-07-26T23:05:52.052Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-15] [244] [INFO ] Got 1 instances from neighboring DS node
[2022-07-26T23:05:52.052Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-15] [245] [INFO ] Renew threshold is: 1
[2022-07-26T23:05:52.052Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [Thread-15] [256] [INFO ] Changing status to UP
[2022-07-26T23:05:52.052Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration] [Thread-15] [69] [INFO ] Started Eureka Server
[2022-07-26T23:06:52.052Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T23:07:52.052Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T23:08:52.052Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T23:09:52.052Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T23:10:21.021Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [AsyncResolver-bootstrap-executor-0] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T23:10:52.052Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 14ms
[2022-07-26T23:11:52.052Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 0ms
[2022-07-26T23:12:09.009Z] [org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler] [http-nio-8081-exec-5] [209] [WARN ] Request method 'GET' not supported
[2022-07-26T23:12:09.009Z] [org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver] [http-nio-8081-exec-5] [208] [WARN ] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
[2022-07-26T23:12:12.012Z] [org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler] [http-nio-8081-exec-6] [209] [WARN ] Request method 'GET' not supported
[2022-07-26T23:12:12.012Z] [org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver] [http-nio-8081-exec-6] [208] [WARN ] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
[2022-07-26T23:12:52.052Z] [com.netflix.eureka.registry.AbstractInstanceRegistry$EvictionTask] [Eureka-EvictionTimer] [1247] [INFO ] Running the evict task with compensationTime 10ms
[2022-07-26T23:13:02.002Z] [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry] [Thread-7] [62] [INFO ] Unregistering application DOCTOR-SERVICE with eureka with status DOWN
[2022-07-26T23:13:02.002Z] [com.netflix.discovery.DiscoveryClient$3] [Thread-7] [1352] [INFO ] Saw local status change event StatusChangeEvent [timestamp=1658857382581, current=DOWN, previous=UP]
[2022-07-26T23:13:02.002Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [873] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081: registering service...
[2022-07-26T23:13:02.002Z] [com.netflix.discovery.DiscoveryClient] [DiscoveryClient-InstanceInfoReplicator-0] [882] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - registration status: 204
[2022-07-26T23:13:02.002Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-7] [83] [INFO ] Shutting down Eureka Server..
[2022-07-26T23:13:02.002Z] [com.netflix.eureka.DefaultEurekaServerContext] [Thread-7] [79] [INFO ] Shutting down ...
[2022-07-26T23:13:02.002Z] [com.netflix.eureka.DefaultEurekaServerContext] [Thread-7] [84] [INFO ] Shut down
[2022-07-26T23:13:02.002Z] [org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap] [Thread-7] [93] [INFO ] Eureka Service is now shutdown...
[2022-07-26T23:13:02.002Z] [com.netflix.eureka.DefaultEurekaServerContext] [Thread-7] [79] [INFO ] Shutting down ...
[2022-07-26T23:13:02.002Z] [com.netflix.eureka.DefaultEurekaServerContext] [Thread-7] [84] [INFO ] Shut down
[2022-07-26T23:13:02.002Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [Thread-7] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T23:13:02.002Z] [com.zaxxer.hikari.HikariDataSource] [Thread-7] [350] [INFO ] HikariPool-1 - Shutdown initiated...
[2022-07-26T23:13:02.002Z] [com.zaxxer.hikari.HikariDataSource] [Thread-7] [352] [INFO ] HikariPool-1 - Shutdown completed.
[2022-07-26T23:13:02.002Z] [com.netflix.discovery.DiscoveryClient] [Thread-7] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T23:13:05.005Z] [com.netflix.discovery.DiscoveryClient] [Thread-7] [971] [INFO ] Unregistering ...
[2022-07-26T23:13:05.005Z] [com.netflix.discovery.DiscoveryClient] [Thread-7] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - deregister  status: 200
[2022-07-26T23:13:06.006Z] [com.netflix.discovery.DiscoveryClient] [Thread-7] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T23:13:06.006Z] [org.springframework.boot.StartupInfoLogger] [restartedMain] [55] [INFO ] Starting DoctorServiceApplication using Java 17.0.2 on inlen8520018485 with PID 26308 (C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service\target\classes started by hyerrabe in C:\Users\HYERRABE\Documents\Sprint-project-workspace\doctor-service)
[2022-07-26T23:13:06.006Z] [org.springframework.boot.SpringApplication] [restartedMain] [634] [INFO ] No active profile set, falling back to 1 default profile: "default"
[2022-07-26T23:13:06.006Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [132] [INFO ] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[2022-07-26T23:13:07.007Z] [org.springframework.data.repository.config.RepositoryConfigurationDelegate] [restartedMain] [201] [INFO ] Finished Spring Data repository scanning in 10 ms. Found 1 JPA repository interfaces.
[2022-07-26T23:13:07.007Z] [org.springframework.cloud.context.scope.GenericScope] [restartedMain] [283] [INFO ] BeanFactory id=ce8945c9-5c64-3aa3-aa10-659655878de9
[2022-07-26T23:13:07.007Z] [org.springframework.boot.web.embedded.tomcat.TomcatWebServer] [restartedMain] [108] [INFO ] Tomcat initialized with port(s): 8081 (http)
[2022-07-26T23:13:07.007Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing ProtocolHandler ["http-nio-8081"]
[2022-07-26T23:13:07.007Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting service [Tomcat]
[2022-07-26T23:13:07.007Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Starting Servlet engine: [Apache Tomcat/9.0.65]
[2022-07-26T23:13:07.007Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Initializing Spring embedded WebApplicationContext
[2022-07-26T23:13:07.007Z] [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext] [restartedMain] [292] [INFO ] Root WebApplicationContext: initialization completed in 500 ms
[2022-07-26T23:13:07.007Z] [com.sun.jersey.server.impl.application.WebApplicationImpl] [restartedMain] [815] [INFO ] Initiating Jersey application, version 'Jersey: 1.19.4 05/24/2017 03:20 PM'
[2022-07-26T23:13:07.007Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:13:07.007Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:13:07.007Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:13:07.007Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:13:07.007Z] [org.hibernate.jpa.internal.util.LogHelper] [restartedMain] [31] [INFO ] HHH000204: Processing PersistenceUnitInfo [name: default]
[2022-07-26T23:13:07.007Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [110] [INFO ] HikariPool-2 - Starting...
[2022-07-26T23:13:07.007Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [123] [INFO ] HikariPool-2 - Start completed.
[2022-07-26T23:13:07.007Z] [org.hibernate.dialect.Dialect] [restartedMain] [175] [INFO ] HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
[2022-07-26T23:13:07.007Z] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [restartedMain] [52] [INFO ] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[2022-07-26T23:13:07.007Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [restartedMain] [437] [INFO ] Initialized JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T23:13:07.007Z] [org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration] [restartedMain] [219] [WARN ] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[2022-07-26T23:13:07.007Z] [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer] [restartedMain] [58] [INFO ] LiveReload server is running on port 35729
[2022-07-26T23:13:07.007Z] [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration] [restartedMain] [87] [INFO ] Eureka HTTP Client uses Jersey
[2022-07-26T23:13:07.007Z] [org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger] [restartedMain] [82] [WARN ] Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
[2022-07-26T23:13:07.007Z] [org.springframework.cloud.netflix.eureka.InstanceInfoFactory] [restartedMain] [67] [INFO ] Setting initial instance status as: STARTING
[2022-07-26T23:13:07.007Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [372] [INFO ] Initializing Eureka in region us-east-1
[2022-07-26T23:13:07.007Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:13:07.007Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:13:07.007Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:13:07.007Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver] [restartedMain] [43] [INFO ] Resolving eureka endpoints via configuration
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1007] [INFO ] Disable delta property : false
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1008] [INFO ] Single vip registry refresh property : null
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1009] [INFO ] Force full registry fetch : false
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1010] [INFO ] Application is null : false
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1011] [INFO ] Registered Applications size is zero : true
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1013] [INFO ] Application version is -1: true
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1097] [INFO ] Getting all instance registry info from the eureka server
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1106] [INFO ] The response status is 200
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [1321] [INFO ] Starting heartbeat executor: renew interval is: 30
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.InstanceInfoReplicator] [restartedMain] [60] [INFO ] InstanceInfoReplicator onDemand update allowed rate per min is 4
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [492] [INFO ] Discovery Client initialized at timestamp 1658857388170 with initial instances count: 1
[2022-07-26T23:13:08.008Z] [com.netflix.eureka.DefaultEurekaServerContext] [restartedMain] [66] [INFO ] Initializing ...
[2022-07-26T23:13:08.008Z] [com.netflix.eureka.cluster.PeerEurekaNodes] [restartedMain] [187] [INFO ] Adding new peer nodes [http://localhost:8761/eureka/]
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [70] [INFO ] Using JSON encoding codec LegacyJacksonJson
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [71] [INFO ] Using JSON decoding codec LegacyJacksonJson
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [80] [INFO ] Using XML encoding codec XStreamXml
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.provider.DiscoveryJerseyProvider] [restartedMain] [81] [INFO ] Using XML decoding codec XStreamXml
[2022-07-26T23:13:08.008Z] [org.springframework.context.support.AbstractApplicationContext] [restartedMain] [591] [WARN ] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration': Unsatisfied dependency expressed through field 'eurekaServerBootstrap'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaServerBootstrap' defined in class path resource [org/springframework/cloud/netflix/eureka/server/EurekaServerAutoConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaServerBootstrap' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3c3e51c0[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@4b6851fc[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1456/0x0000000800b2f2e0@478b65ae]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@1f36c902[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 28]
[2022-07-26T23:13:08.008Z] [com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl] [restartedMain] [178] [ERROR] Cannot shutdown ReplicaAwareInstanceRegistry
java.lang.NullPointerException: Cannot invoke "com.netflix.eureka.cluster.PeerEurekaNodes.shutdown()" because "this.peerEurekaNodes" is null
	at com.netflix.eureka.registry.PeerAwareInstanceRegistryImpl.shutdown(PeerAwareInstanceRegistryImpl.java:176)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:319)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1163)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1156)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:596)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
[2022-07-26T23:13:08.008Z] [org.springframework.beans.factory.support.DisposableBeanAdapter] [restartedMain] [329] [WARN ] Custom destroy method 'shutdown' on bean with name 'peerAwareInstanceRegistry' threw an exception: java.lang.NullPointerException: Cannot invoke "com.netflix.eureka.registry.ResponseCache.stop()" because "this.responseCache" is null
[2022-07-26T23:13:08.008Z] [org.springframework.orm.jpa.AbstractEntityManagerFactoryBean] [restartedMain] [651] [INFO ] Closing JPA EntityManagerFactory for persistence unit 'default'
[2022-07-26T23:13:08.008Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [350] [INFO ] HikariPool-2 - Shutdown initiated...
[2022-07-26T23:13:08.008Z] [com.zaxxer.hikari.HikariDataSource] [restartedMain] [352] [INFO ] HikariPool-2 - Shutdown completed.
[2022-07-26T23:13:08.008Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [935] [INFO ] Shutting down DiscoveryClient ...
[2022-07-26T23:13:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [971] [INFO ] Unregistering ...
[2022-07-26T23:13:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [973] [INFO ] DiscoveryClient_DOCTOR-SERVICE/inlen8520018485.corp.capgemini.com:doctor-service:8081 - deregister  status: 404
[2022-07-26T23:13:11.011Z] [com.netflix.discovery.DiscoveryClient] [restartedMain] [960] [INFO ] Completed shut down of DiscoveryClient
[2022-07-26T23:13:11.011Z] [org.apache.juli.logging.DirectJDKLog] [restartedMain] [173] [INFO ] Stopping service [Tomcat]
[2022-07-26T23:13:11.011Z] [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener] [restartedMain] [136] [INFO ] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[2022-07-26T23:13:11.011Z] [org.springframework.boot.SpringApplication] [restartedMain] [824] [ERROR] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration': Unsatisfied dependency expressed through field 'eurekaServerBootstrap'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaServerBootstrap' defined in class path resource [org/springframework/cloud/netflix/eureka/server/EurekaServerAutoConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaServerBootstrap' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3c3e51c0[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@4b6851fc[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1456/0x0000000800b2f2e0@478b65ae]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@1f36c902[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 28]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.doctorservice.DoctorServiceApplication.main(DoctorServiceApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'eurekaServerBootstrap' defined in class path resource [org/springframework/cloud/netflix/eureka/server/EurekaServerAutoConfiguration.class]: Unsatisfied dependency expressed through method 'eurekaServerBootstrap' parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3c3e51c0[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@4b6851fc[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1456/0x0000000800b2f2e0@478b65ae]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@1f36c902[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 28]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'eurekaServerContext': Invocation of init method failed; nested exception is java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3c3e51c0[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@4b6851fc[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1456/0x0000000800b2f2e0@478b65ae]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@1f36c902[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 28]
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 38 common frames omitted
Caused by: java.lang.IllegalStateException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3c3e51c0[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@4b6851fc[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1456/0x0000000800b2f2e0@478b65ae]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@1f36c902[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 28]
	at com.netflix.eureka.cluster.PeerEurekaNodes.start(PeerEurekaNodes.java:106)
	at com.netflix.eureka.DefaultEurekaServerContext.initialize(DefaultEurekaServerContext.java:67)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:333)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:157)
	... 51 common frames omitted
Caused by: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@3c3e51c0[Not completed, task = java.util.concurrent.Executors$RunnableAdapter@4b6851fc[Wrapped task = com.netflix.servo.monitor.StatsMonitor$$Lambda$1456/0x0000000800b2f2e0@478b65ae]] rejected from java.util.concurrent.ScheduledThreadPoolExecutor@1f36c902[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 28]
	at java.base/java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2065)
	at java.base/java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:833)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.delayedExecute(ScheduledThreadPoolExecutor.java:340)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor.scheduleWithFixedDelay(ScheduledThreadPoolExecutor.java:680)
	at com.netflix.servo.monitor.StatsMonitor.startComputingStats(StatsMonitor.java:409)
	at com.netflix.servo.monitor.StatsMonitor.lambda$new$0(StatsMonitor.java:365)
	at com.netflix.servo.monitor.StatsMonitor.startComputingStats(StatsMonitor.java:377)
	at com.netflix.servo.monitor.StatsTimer.<init>(StatsTimer.java:70)
	at com.netflix.servo.monitor.StatsTimer.<init>(StatsTimer.java:47)
	at com.netflix.eureka.util.batcher.AcceptorExecutor.<init>(AcceptorExecutor.java:116)
	at com.netflix.eureka.util.batcher.TaskDispatchers.createBatchingTaskDispatcher(TaskDispatchers.java:43)
	at com.netflix.eureka.cluster.PeerEurekaNode.<init>(PeerEurekaNode.java:104)
	at com.netflix.eureka.cluster.PeerEurekaNode.<init>(PeerEurekaNode.java:87)
	at org.springframework.cloud.netflix.eureka.server.EurekaServerAutoConfiguration$RefreshablePeerEurekaNodes.createPeerEurekaNode(EurekaServerAutoConfiguration.java:297)
	at com.netflix.eureka.cluster.PeerEurekaNodes.updatePeerEurekaNodes(PeerEurekaNodes.java:189)
	at com.netflix.eureka.cluster.PeerEurekaNodes.start(PeerEurekaNodes.java:87)
	... 59 common frames omitted
>>>>>>> branch 'main' of https://github.com/HarshiniYerrabelli2303/PharmacyManagementSystem.git
